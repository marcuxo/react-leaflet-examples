{"version":3,"sources":["../node_modules/react-leaflet/esm/Marker.js","pages/checking-if-the-marker-is-in-viewport.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","util/tileLayer.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js","../node_modules/react-leaflet/esm/Popup.js"],"names":["Marker","createLayerComponent","ctx","position","options","instance","LeafletMarker","context","overlayContainer","marker","props","prevProps","setLatLng","icon","setIcon","zIndexOffset","setZIndexOffset","opacity","setOpacity","dragging","draggable","enable","disable","center","Legend","map","useState","view","setView","markerRef","useRef","useEffect","legend","L","control","onAdd","div","DomUtil","create","DomEvent","disableClickPropagation","innerHTML","addTo","checkIfMarkerIsInViewport","contains","getBounds","current","getLatLng","on","remove","off","ref","MapWrapper","setMap","whenCreated","zoom","scrollWheelZoom","tileLayer","withPane","pane","useEventHandlers","element","eventHandlers","eventHandlersRef","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","useLayerLifecycle","layerContainer","addLayer","_context$layersContro","layersControl","removeLayer","createLayerHook","useElement","useLeafletContext","elementRef","useAttribution","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","createContainerComponent","ContainerComponent","useImperativeHandle","children","React","createElement","LeafletProvider","forwardRef","createDivOverlayComponent","OverlayComponent","isOpen","setOpen","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","pathOptions","setStyle","createPathHook","createElementHook","updateElement","propsRef","createControlHook","positionRef","setPosition","createDivOverlayHook","useLifecycle","url","createControlComponent","createInstance","useControl","useLayer","createOverlayComponent","useOverlay","createPathComponent","usePath","createTileLayerComponent","updateGridLayer","layer","zIndex","setZIndex","TileLayer","LeafletTileLayer","Popup","LeafletPopup","onClose","onOpen","onPopupOpen","event","popup","onPopupClose","popupopen","popupclose","openOn","bindPopup"],"mappings":"+MAEaA,EAASC,aAAqB,WAGxCC,GAAK,IAFNC,EAEM,EAFNA,SACGC,EACG,4BACAC,EAAW,IAAIC,SAAcH,EAAUC,GAC7C,MAAO,CACLC,WACAE,QAAS,2BAAKL,GAAP,IACLM,iBAAkBH,QAGrB,SAAsBI,EAAQC,EAAOC,GAClCD,EAAMP,WAAaQ,EAAUR,UAC/BM,EAAOG,UAAUF,EAAMP,UAGP,MAAdO,EAAMG,MAAgBH,EAAMG,OAASF,EAAUE,MACjDJ,EAAOK,QAAQJ,EAAMG,MAGG,MAAtBH,EAAMK,cAAwBL,EAAMK,eAAiBJ,EAAUI,cACjEN,EAAOO,gBAAgBN,EAAMK,cAGV,MAAjBL,EAAMO,SAAmBP,EAAMO,UAAYN,EAAUM,SACvDR,EAAOS,WAAWR,EAAMO,SAGH,MAAnBR,EAAOU,UAAoBT,EAAMU,YAAcT,EAAUS,aACnC,IAApBV,EAAMU,UACRX,EAAOU,SAASE,SAEhBZ,EAAOU,SAASG,e,mIC7BhBC,EAAS,CAAC,SAAU,UAEpBC,EAAS,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAAU,EACFC,oBAAS,GADP,mBACnBC,EADmB,KACbC,EADa,KAEpBC,EAAYC,iBAAO,MAoCzB,OAlCAC,qBAAU,WACR,GAAKN,EAAL,CAEA,IAAMO,EAASC,IAAEC,QAAQ,CAAE/B,SAAU,eAErC6B,EAAOG,MAAQ,WASb,OARAH,EAAOI,IAAMH,IAAEI,QAAQC,OAAO,MAAO,eAErCL,IAAEM,SAASC,wBAAwBR,EAAOI,KAE1CJ,EAAOI,IAAIK,UAAX,sIACEd,EAAO,QAAU,MADnB,aAEKA,EAFL,QAIOK,EAAOI,KAGhBJ,EAAOU,MAAMjB,GAEb,IAAMkB,EAA4B,WAChC,IACMC,EADYnB,EAAIoB,YACKD,SAASf,EAAUiB,QAAQC,aACtDnB,EAAQgB,IAMV,OAHAnB,EAAIuB,GAAG,UAAWL,GAGX,WACLX,EAAOiB,SACPxB,EAAIyB,IAAI,UAAWP,OAEpB,CAAClB,EAAKE,IAGP,cAAC,IAAD,CAAQwB,IAAKtB,EAAW1B,SAAUoB,EAAlC,SACE,cAAC,IAAD,+BAqBS6B,UAhBI,WAAO,IAAD,EACD1B,mBAAS,MADR,mBAChBD,EADgB,KACX4B,EADW,KAEvB,OACE,eAAC,IAAD,CACEC,YAAaD,EACb9B,OAAQA,EACRgC,KAAM,GACNC,iBAAiB,EAJnB,UAME,cAAC,IAAD,eAAeC,MAEf,cAACjC,EAAD,CAAQC,IAAKA,S,8EC/DZ,SAASiC,EAAShD,EAAOH,GAAS,MACjCoD,EAAI,UAAGjD,EAAMiD,YAAT,QAAiBpD,EAAQoD,KACnC,OAAOA,EAAO,2BAAKjD,GAAR,IACTiD,SACEjD,I,gCCJN,6CACO,SAASkD,EAAiBC,EAASC,GACxC,IAAMC,EAAmBjC,mBACzBC,qBAAU,WAMR,OALqB,MAAjB+B,GACFD,EAAQxD,SAAS2C,GAAGc,GAGtBC,EAAiBjB,QAAUgB,EACpB,WAC2B,MAA5BC,EAAiBjB,SACnBe,EAAQxD,SAAS6C,IAAIa,EAAiBjB,SAGxCiB,EAAiBjB,QAAU,QAE5B,CAACe,EAASC,M,gCChBA,SAASE,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,ECVT,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eAEtDM,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,EAGM,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNb,EAAQL,OAAOqB,IAAS,GAAMC,SAAQ,SAAUxB,GAC9C,EAAemB,EAAQnB,EAAKuB,EAAOvB,OAE5BE,OAAOuB,0BAChBvB,OAAOwB,iBAAiBP,EAAQjB,OAAOuB,0BAA0BF,IAEjEhB,EAAQL,OAAOqB,IAASC,SAAQ,SAAUxB,GACxCE,OAAOC,eAAegB,EAAQnB,EAAKE,OAAOa,yBAAyBQ,EAAQvB,OAKjF,OAAOmB,E,mECjCT,+GAKO,SAASQ,EAAkBhC,EAAStD,GACzCwB,qBAAU,WAAoB,MAG5B,OAFe,UAAGxB,EAAQuF,sBAAX,QAA6BvF,EAAQkB,KAC1CsE,SAASlC,EAAQxD,UACpB,WACL,IAAI2F,EAE+C,OAAlDA,EAAwBzF,EAAQ0F,gBAAkCD,EAAsBE,YAAYrC,EAAQxD,UAC7GE,EAAQkB,IAAIyE,YAAYrC,EAAQxD,aAEjC,CAACE,EAASsD,IAER,SAASsC,EAAgBC,GAC9B,OAAO,SAAkB1F,GACvB,IAAMH,EAAU8F,cACVC,EAAaF,EAAW1C,YAAShD,EAAOH,GAAUA,GAIxD,OAHAgG,YAAehG,EAAQkB,IAAKf,EAAM8F,aAClC5C,YAAiB0C,EAAWxD,QAASpC,EAAMoD,eAC3C+B,EAAkBS,EAAWxD,QAASvC,GAC/B+F,K,gCCxBX,6CACO,SAASC,EAAe9E,EAAK+E,GAClC,IAAMC,EAAiB3E,iBAAO0E,GAC9BzE,qBAAU,WACJyE,IAAgBC,EAAe3D,SAAqC,MAA1BrB,EAAIiF,qBAClB,MAA1BD,EAAe3D,SACjBrB,EAAIiF,mBAAmBC,kBAAkBF,EAAe3D,SAGvC,MAAf0D,GACF/E,EAAIiF,mBAAmBE,eAAeJ,IAI1CC,EAAe3D,QAAU0D,IACxB,CAAC/E,EAAK+E,M,iLCZJ,SAASK,EAAyBT,GACvC,SAASU,EAAmBpG,EAAOyC,GAAK,MAIlCiD,EAAW1F,GAAOoC,QAFpBzC,EAFoC,EAEpCA,SACAE,EAHoC,EAGpCA,QAGF,OADAwG,8BAAoB5D,GAAK,kBAAM9C,KACN,MAAlBK,EAAMsG,SAAmB,KAAoBC,IAAMC,cAAcC,IAAiB,CACvFhD,MAAO5D,GACNG,EAAMsG,UAGX,OAAoBI,qBAAWN,GAE1B,SAASO,EAA0BjB,GACxC,SAASkB,EAAiB5G,EAAOyC,GAAK,MACVzB,oBAAS,GADC,mBAC7B6F,EAD6B,KACrBC,EADqB,KAGlCnH,EACE+F,EAAW1F,EAAO8G,GAAS1E,QAD7BzC,SAEF0G,8BAAoB5D,GAAK,kBAAM9C,KAC/B0B,qBAAU,WACJwF,GACFlH,EAASoH,WAEV,CAACpH,EAAUkH,EAAQ7G,EAAMsG,WAE5B,IAAMU,EAAcrH,EAASsH,aAC7B,OAAOD,EAA2BE,uBAAalH,EAAMsG,SAAUU,GAAe,KAGhF,OAAoBN,qBAAWE,GAE1B,SAASO,EAAoBzB,GAClC,SAAS0B,EAAcpH,EAAOyC,GAAK,IAE/B9C,EACE+F,EAAW1F,GAAOoC,QADpBzC,SAGF,OADA0G,8BAAoB5D,GAAK,kBAAM9C,KACxB,KAGT,OAAoB+G,qBAAWU,K,gCC7CjC,+GAKO,SAASC,EAAelE,EAASnD,GACtC,IAAMsH,EAAalG,mBACnBC,qBAAU,WACR,GAAIrB,EAAMuH,cAAgBD,EAAWlF,QAAS,OACtC1C,EAAO,UAAGM,EAAMuH,mBAAT,QAAwB,GACrCpE,EAAQxD,SAAS6H,SAAS9H,GAC1B4H,EAAWlF,QAAU1C,KAEtB,CAACyD,EAASnD,IAER,SAASyH,EAAe/B,GAC7B,OAAO,SAAiB1F,GACtB,IAAMH,EAAU8F,cACVC,EAAaF,EAAW1C,YAAShD,EAAOH,GAAUA,GAIxD,OAHAqD,YAAiB0C,EAAWxD,QAASpC,EAAMoD,eAC3C+B,YAAkBS,EAAWxD,QAASvC,GACtCwH,EAAezB,EAAWxD,QAASpC,GAC5B4F,K,gCCtBX,6CACO,SAAS8B,EAAkBlB,EAAemB,GAC/C,OAAqB,MAAjBA,EACK,SAAoC3H,EAAOH,GAChD,OAAOuB,iBAAOoF,EAAcxG,EAAOH,KAIhC,SAAkCG,EAAOH,GAC9C,IAAM+F,EAAaxE,iBAAOoF,EAAcxG,EAAOH,IACzC+H,EAAWxG,iBAAOpB,GAEtBL,EACEiG,EAAWxD,QADbzC,SAQF,OANA0B,qBAAU,WACJuG,EAASxF,UAAYpC,IACvB2H,EAAchI,EAAUK,EAAO4H,EAASxF,SACxCwF,EAASxF,QAAUpC,KAEpB,CAACL,EAAUK,EAAOH,IACd+F,K,gCCpBX,qDAEO,SAASiC,EAAkBnC,GAChC,OAAO,SAA2B1F,GAChC,IAAMH,EAAU8F,cACVC,EAAaF,EAAW1F,EAAOH,GAEnCF,EACEiG,EAAWxD,QADbzC,SAEImI,EAAc1G,iBAAOpB,EAAMP,UAE/BA,EACEO,EADFP,SAcF,OAZA4B,qBAAU,WAER,OADA1B,EAASqC,MAAMnC,EAAQkB,KAChB,WACLpB,EAAS4C,YAEV,CAAC1C,EAAQkB,IAAKpB,IACjB0B,qBAAU,WACQ,MAAZ5B,GAAoBA,IAAaqI,EAAY1F,UAC/CzC,EAASoI,YAAYtI,GACrBqI,EAAY1F,QAAU3C,KAEvB,CAACE,EAAUF,IACPmG,K,gCCzBX,sEAIO,SAASoC,EAAqBtC,EAAYuC,GAC/C,OAAO,SAAuBjI,EAAO8G,GACnC,IAAMjH,EAAU8F,cACVC,EAAaF,EAAW1C,YAAShD,EAAOH,GAAUA,GAIxD,OAHAgG,YAAehG,EAAQkB,IAAKf,EAAM8F,aAClC5C,YAAiB0C,EAAWxD,QAASpC,EAAMoD,eAC3C6E,EAAarC,EAAWxD,QAASvC,EAASG,EAAO8G,GAC1ClB,K,gCCNI7C,IALG,CAChB+C,YAAa,2EACboC,IAAK,uD,gCCFP,8NAMO,SAASC,EAAuBC,GAQrC,IAAM1C,EAAagC,aAPnB,SAAuB1H,EAAOH,GAC5B,MAAO,CACLF,SAAUyI,EAAepI,GACzBH,cAKEwI,EAAaR,YAAkBnC,GACrC,OAAOyB,YAAoBkB,GAEtB,SAAS9I,EAAqBiH,EAAemB,GAClD,IAAMjC,EAAagC,YAAkBlB,EAAemB,GAC9CW,EAAW7C,YAAgBC,GACjC,OAAOS,YAAyBmC,GAE3B,SAASC,EAAuB/B,EAAeyB,GACpD,IAAMvC,EAAagC,YAAkBlB,GAC/BgC,EAAaR,YAAqBtC,EAAYuC,GACpD,OAAOtB,YAA0B6B,GAE5B,SAASC,EAAoBjC,EAAemB,GACjD,IAAMjC,EAAagC,YAAkBlB,EAAemB,GAC9Ce,EAAUjB,YAAe/B,GAC/B,OAAOS,YAAyBuC,GAE3B,SAASC,EAAyBnC,EAAemB,GACtD,IAAMjC,EAAagC,YAAkBlB,EAAemB,GAC9CW,EAAW7C,YAAgBC,GACjC,OAAOyB,YAAoBmB,K,gCCpCtB,SAASM,EAAgBC,EAAO7I,EAAOC,GAAW,IAErDM,EAEEP,EAFFO,QACAuI,EACE9I,EADF8I,OAGa,MAAXvI,GAAmBA,IAAYN,EAAUM,SAC3CsI,EAAMrI,WAAWD,GAGL,MAAVuI,GAAkBA,IAAW7I,EAAU6I,QACzCD,EAAME,UAAUD,GAXpB,mC,8GCEaE,EAAYL,aAAyB,WAG/C9I,GAAS,IAFVqI,EAEU,EAFVA,IACGxI,EACO,uBACV,MAAO,CACLC,SAAU,IAAIsJ,YAAiBf,EAAKlF,YAAStD,EAASG,IACtDA,aAED+I,M,gCCVH,6DAGaM,EAAQX,aAAuB,SAAqBvI,EAAOH,GACtE,MAAO,CACLF,SAAU,IAAIwJ,QAAanJ,EAAOH,EAAQC,kBAC1CD,cAED,SAA2BsD,EAAStD,EAASG,EAAO8G,GAAS,IAE5DsC,EAGEpJ,EAHFoJ,QACAC,EAEErJ,EAFFqJ,OACA5J,EACEO,EADFP,SAEF4B,qBAAU,WAAoB,IAE1B1B,EACEwD,EADFxD,SAGF,SAAS2J,EAAYC,GACfA,EAAMC,QAAU7J,IAClBA,EAASoH,SACTD,GAAQ,GACE,MAAVuC,GAA0BA,KAI9B,SAASI,EAAaF,GAChBA,EAAMC,QAAU7J,IAClBmH,GAAQ,GACG,MAAXsC,GAA2BA,KAqB/B,OAjBAvJ,EAAQkB,IAAIuB,GAAG,CACboH,UAAWJ,EACXK,WAAYF,IAGkB,MAA5B5J,EAAQC,kBAEM,MAAZL,GACFE,EAASO,UAAUT,GAGrBE,EAASiK,OAAO/J,EAAQkB,MAGxBlB,EAAQC,iBAAiB+J,UAAUlK,GAG9B,WACLE,EAAQkB,IAAIyB,IAAI,CACdkH,UAAWJ,EACXK,WAAYF,IAEd5J,EAAQkB,IAAIyE,YAAY7F,MAEzB,CAACwD,EAAStD,EAASiH,EAASsC,EAASC,EAAQ5J","file":"static/js/pages-checking-if-the-marker-is-in-viewport-js.c6b456ea.chunk.js","sourcesContent":["import { createLayerComponent } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker({\n  position,\n  ...options\n}, ctx) {\n  const instance = new LeafletMarker(position, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateMarker(marker, props, prevProps) {\n  if (props.position !== prevProps.position) {\n    marker.setLatLng(props.position);\n  }\n\n  if (props.icon != null && props.icon !== prevProps.icon) {\n    marker.setIcon(props.icon);\n  }\n\n  if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n    marker.setZIndexOffset(props.zIndexOffset);\n  }\n\n  if (props.opacity != null && props.opacity !== prevProps.opacity) {\n    marker.setOpacity(props.opacity);\n  }\n\n  if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n    if (props.draggable === true) {\n      marker.dragging.enable();\n    } else {\n      marker.dragging.disable();\n    }\n  }\n});","import { useState, useEffect, useRef } from \"react\";\r\nimport { Marker, MapContainer, TileLayer, Popup } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport tileLayer from \"../util/tileLayer\";\r\n\r\nconst center = [52.22977, 21.01178];\r\n\r\nconst Legend = ({ map }) => {\r\n  const [view, setView] = useState(true);\r\n  const markerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!map) return;\r\n\r\n    const legend = L.control({ position: \"bottomleft\" });\r\n\r\n    legend.onAdd = () => {\r\n      legend.div = L.DomUtil.create(\"div\", \"description\");\r\n\r\n      L.DomEvent.disableClickPropagation(legend.div);\r\n\r\n      legend.div.innerHTML = `We check if the marker is in the page view. Move the marker so that it is outside the map. Marker in view: <b style=\"color: ${\r\n        view ? \"black\" : \"red\"\r\n      }\">${view}</b>`;\r\n\r\n      return legend.div;\r\n    };\r\n\r\n    legend.addTo(map);\r\n\r\n    const checkIfMarkerIsInViewport = () => {\r\n      const mapBounds = map.getBounds();\r\n      const contains = mapBounds.contains(markerRef.current.getLatLng());\r\n      setView(contains);\r\n    };\r\n\r\n    map.on(\"moveend\", checkIfMarkerIsInViewport);\r\n\r\n    // remove the legend\r\n    return () => {\r\n      legend.remove();\r\n      map.off(\"moveend\", checkIfMarkerIsInViewport);\r\n    };\r\n  }, [map, view]);\r\n\r\n  return (\r\n    <Marker ref={markerRef} position={center}>\r\n      <Popup>Center Warsaw</Popup>\r\n    </Marker>\r\n  );\r\n};\r\n\r\nconst MapWrapper = () => {\r\n  const [map, setMap] = useState(null);\r\n  return (\r\n    <MapContainer\r\n      whenCreated={setMap}\r\n      center={center}\r\n      zoom={18}\r\n      scrollWheelZoom={false}\r\n    >\r\n      <TileLayer {...tileLayer} />\r\n\r\n      <Legend map={map} />\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default MapWrapper;\r\n","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layersContro;\n\n      (_context$layersContro = context.layersControl) == null ? void 0 : _context$layersContro.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","const tileLayer = {\r\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\r\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n}\r\n\r\nexport default tileLayer;","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer({\n  url,\n  ...options\n}, context) {\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);","import { createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n  return {\n    instance: new LeafletPopup(props, context.overlayContainer),\n    context\n  };\n}, function usePopupLifecycle(element, context, props, setOpen) {\n  const {\n    onClose,\n    onOpen,\n    position\n  } = props;\n  useEffect(function addPopup() {\n    const {\n      instance\n    } = element;\n\n    function onPopupOpen(event) {\n      if (event.popup === instance) {\n        instance.update();\n        setOpen(true);\n        onOpen == null ? void 0 : onOpen();\n      }\n    }\n\n    function onPopupClose(event) {\n      if (event.popup === instance) {\n        setOpen(false);\n        onClose == null ? void 0 : onClose();\n      }\n    }\n\n    context.map.on({\n      popupopen: onPopupOpen,\n      popupclose: onPopupClose\n    });\n\n    if (context.overlayContainer == null) {\n      // Attach to a Map\n      if (position != null) {\n        instance.setLatLng(position);\n      }\n\n      instance.openOn(context.map);\n    } else {\n      // Attach to container component\n      context.overlayContainer.bindPopup(instance);\n    }\n\n    return function removePopup() {\n      context.map.off({\n        popupopen: onPopupOpen,\n        popupclose: onPopupClose\n      });\n      context.map.removeLayer(instance);\n    };\n  }, [element, context, setOpen, onClose, onOpen, position]);\n});"],"sourceRoot":""}