{"version":3,"sources":["../node_modules/react-leaflet/esm/Marker.js","pages/marker-draggable-on-a-click.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","util/tileLayer.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js","../node_modules/react-leaflet/esm/Popup.js"],"names":["Marker","createLayerComponent","ctx","position","options","instance","LeafletMarker","context","overlayContainer","marker","props","prevProps","setLatLng","icon","setIcon","zIndexOffset","setZIndexOffset","opacity","setOpacity","dragging","draggable","enable","disable","center","MapWrapper","useState","setDraggable","zoom","scrollWheelZoom","tileLayer","eventHandlers","click","withPane","pane","useEventHandlers","element","eventHandlersRef","useRef","useEffect","on","current","off","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","useLayerLifecycle","layerContainer","map","addLayer","_context$layersContro","layersControl","removeLayer","createLayerHook","useElement","useLeafletContext","elementRef","useAttribution","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","createContainerComponent","ContainerComponent","ref","useImperativeHandle","children","React","createElement","LeafletProvider","forwardRef","createDivOverlayComponent","OverlayComponent","isOpen","setOpen","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","pathOptions","setStyle","createPathHook","createElementHook","updateElement","propsRef","createControlHook","positionRef","addTo","remove","setPosition","createDivOverlayHook","useLifecycle","url","createControlComponent","createInstance","useControl","useLayer","createOverlayComponent","useOverlay","createPathComponent","usePath","createTileLayerComponent","updateGridLayer","layer","zIndex","setZIndex","TileLayer","LeafletTileLayer","Popup","LeafletPopup","onClose","onOpen","onPopupOpen","event","popup","onPopupClose","popupopen","popupclose","openOn","bindPopup"],"mappings":"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","file":"static/js/pages-marker-draggable-on-a-click-js.88633568.chunk.js","sourcesContent":["import { createLayerComponent } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker({\n  position,\n  ...options\n}, ctx) {\n  const instance = new LeafletMarker(position, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateMarker(marker, props, prevProps) {\n  if (props.position !== prevProps.position) {\n    marker.setLatLng(props.position);\n  }\n\n  if (props.icon != null && props.icon !== prevProps.icon) {\n    marker.setIcon(props.icon);\n  }\n\n  if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n    marker.setZIndexOffset(props.zIndexOffset);\n  }\n\n  if (props.opacity != null && props.opacity !== prevProps.opacity) {\n    marker.setOpacity(props.opacity);\n  }\n\n  if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n    if (props.draggable === true) {\n      marker.dragging.enable();\n    } else {\n      marker.dragging.disable();\n    }\n  }\n});","import { useState } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport tileLayer from '../util/tileLayer';\r\n\r\nconst center = [52.22977, 21.01178];\r\n\r\nconst MapWrapper = () => {\r\n  const [draggable, setDraggable] = useState(false)\r\n\r\n  return (\r\n    <MapContainer center={center} zoom={18} scrollWheelZoom={false}>\r\n      <TileLayer {...tileLayer} />\r\n\r\n      <Marker\r\n        position={center}\r\n        draggable={draggable}\r\n        eventHandlers={{\r\n          click() {\r\n            setDraggable(true)\r\n          }\r\n        }}>\r\n        <Popup>Center Warsaw</Popup>\r\n      </Marker>\r\n\r\n    </MapContainer>\r\n  )\r\n}\r\n\r\nexport default MapWrapper;","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layersContro;\n\n      (_context$layersContro = context.layersControl) == null ? void 0 : _context$layersContro.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","const tileLayer = {\r\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\r\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n}\r\n\r\nexport default tileLayer;","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer({\n  url,\n  ...options\n}, context) {\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);","import { createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n  return {\n    instance: new LeafletPopup(props, context.overlayContainer),\n    context\n  };\n}, function usePopupLifecycle(element, context, props, setOpen) {\n  const {\n    onClose,\n    onOpen,\n    position\n  } = props;\n  useEffect(function addPopup() {\n    const {\n      instance\n    } = element;\n\n    function onPopupOpen(event) {\n      if (event.popup === instance) {\n        instance.update();\n        setOpen(true);\n        onOpen == null ? void 0 : onOpen();\n      }\n    }\n\n    function onPopupClose(event) {\n      if (event.popup === instance) {\n        setOpen(false);\n        onClose == null ? void 0 : onClose();\n      }\n    }\n\n    context.map.on({\n      popupopen: onPopupOpen,\n      popupclose: onPopupClose\n    });\n\n    if (context.overlayContainer == null) {\n      // Attach to a Map\n      if (position != null) {\n        instance.setLatLng(position);\n      }\n\n      instance.openOn(context.map);\n    } else {\n      // Attach to container component\n      context.overlayContainer.bindPopup(instance);\n    }\n\n    return function removePopup() {\n      context.map.off({\n        popupopen: onPopupOpen,\n        popupclose: onPopupClose\n      });\n      context.map.removeLayer(instance);\n    };\n  }, [element, context, setOpen, onClose, onOpen, position]);\n});"],"sourceRoot":""}