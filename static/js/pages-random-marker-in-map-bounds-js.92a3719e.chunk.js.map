{"version":3,"sources":["pages/random-marker-in-map-bounds.module.css","pages/random-marker-in-map-bounds.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","util/tileLayer.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js"],"names":["module","exports","center","RandomMarkerInMapBounds","map","useEffect","legend","L","control","position","onAdd","div","DomUtil","create","DomEvent","disableClickPropagation","insertAdjacentHTML","addTo","customControl","Control","extend","options","title","className","styles","leafletRandomMarker","this","_map","_initialLayout","container","_container","innerHTML","on","stopPropagation","stop","removeMarkers","randomMarker","addControl","fg","featureGroup","bounds","getBounds","southWest","getSouthWest","northEast","getNorthEast","lngSpan","lng","latSpan","lat","allPoints","i","points","Math","random","push","length","marker","icon","divIcon","iconSize","point","html","floor","toString","iconAnchor","popupAnchor","bindPopup","fitBounds","padding","clearLayers","MapWrapper","useState","setMap","whenCreated","zoom","scrollWheelZoom","tileLayer","withPane","props","context","pane","useEventHandlers","element","eventHandlers","eventHandlersRef","useRef","instance","current","off","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","useLayerLifecycle","layerContainer","addLayer","_context$layersContro","layersControl","removeLayer","createLayerHook","useElement","useLeafletContext","elementRef","useAttribution","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","createContainerComponent","ContainerComponent","ref","useImperativeHandle","children","React","createElement","LeafletProvider","forwardRef","createDivOverlayComponent","OverlayComponent","isOpen","setOpen","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","pathOptions","setStyle","createPathHook","createElementHook","updateElement","propsRef","createControlHook","positionRef","remove","setPosition","createDivOverlayHook","useLifecycle","url","createControlComponent","createInstance","useControl","createLayerComponent","useLayer","createOverlayComponent","useOverlay","createPathComponent","usePath","createTileLayerComponent","updateGridLayer","layer","prevProps","opacity","zIndex","setOpacity","setZIndex","TileLayer","LeafletTileLayer"],"mappings":"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","file":"static/js/pages-random-marker-in-map-bounds-js.92a3719e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"leafletRandomMarker\":\"random-marker-in-map-bounds_leafletRandomMarker__seCYz\"};","import { useState, useEffect } from \"react\";\r\nimport { MapContainer, TileLayer } from \"react-leaflet\";\r\nimport styles from \"./random-marker-in-map-bounds.module.css\";\r\nimport L from \"leaflet\";\r\nimport tileLayer from \"../util/tileLayer\";\r\n\r\nconst center = [52.22977, 21.01178];\r\n\r\n// RandomMarkerInMapBounds\r\nconst RandomMarkerInMapBounds = ({ map }) => {\r\n  useEffect(() => {\r\n    if (!map) return;\r\n\r\n    const legend = L.control({ position: \"bottomleft\" });\r\n\r\n    legend.onAdd = function () {\r\n      let div = L.DomUtil.create(\"div\", \"description\");\r\n      L.DomEvent.disableClickPropagation(div);\r\n      const text = \"Dynamic generation of 30 markers in the map view\";\r\n      div.insertAdjacentHTML(\"beforeend\", text);\r\n      return div;\r\n    };\r\n\r\n    legend.addTo(map);\r\n\r\n    // add \"random\" button\r\n    const buttonTemplate =\r\n      '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"><path d=\"M24 22h-3.172l-5-5 5-5h3.172v5l7-7-7-7v5h-4c-0.53 0-1.039 0.211-1.414 0.586l-5.586 5.586-5.586-5.586c-0.375-0.375-0.884-0.586-1.414-0.586h-6v4h5.172l5 5-5 5h-5.172v4h6c0.53 0 1.039-0.211 1.414-0.586l5.586-5.586 5.586 5.586c0.375 0.375 0.884 0.586 1.414 0.586h4v5l7-7-7-7v5z\" /></svg>';\r\n\r\n    // create custom button\r\n    const customControl = L.Control.extend({\r\n      // button position\r\n      options: {\r\n        position: \"topleft\",\r\n        title: \"random marker\",\r\n        className: styles.leafletRandomMarker,\r\n      },\r\n\r\n      // method\r\n      onAdd: function (map) {\r\n        this._map = map;\r\n        return this._initialLayout();\r\n      },\r\n\r\n      _initialLayout: function () {\r\n        // create button\r\n        const container = L.DomUtil.create(\r\n          \"div\",\r\n          \"leaflet-bar \" + this.options.className\r\n        );\r\n        this._container = container;\r\n\r\n        L.DomEvent.disableClickPropagation(container);\r\n\r\n        container.title = this.options.title;\r\n        container.innerHTML = buttonTemplate;\r\n\r\n        // action when clik on button\r\n        // clear and add radnom marker\r\n        L.DomEvent.on(\r\n          container,\r\n          \"mousedown dblclic\",\r\n          L.DomEvent.stopPropagation\r\n        )\r\n          .on(container, \"click\", L.DomEvent.stop)\r\n          .on(container, \"click\", removeMarkers)\r\n          .on(container, \"click\", randomMarker);\r\n\r\n        return this._container;\r\n      },\r\n    });\r\n\r\n    // adding new button to map controll\r\n    map.addControl(new customControl());\r\n\r\n    // random color\r\n    // ------------------------------\r\n    const randomColor = () => Math.floor(Math.random() * 16777215).toString(16);\r\n\r\n    // create legend\r\n    // ------------------------------\r\n\r\n    // add feature group to map\r\n    const fg = L.featureGroup().addTo(map);\r\n\r\n    // create random marker\r\n    function randomMarker() {\r\n      // get bounds of map\r\n      const bounds = map.getBounds();\r\n\r\n      let southWest = bounds.getSouthWest();\r\n      let northEast = bounds.getNorthEast();\r\n      let lngSpan = northEast.lng - southWest.lng;\r\n      let latSpan = northEast.lat - southWest.lat;\r\n\r\n      let allPoints = [];\r\n\r\n      // generate random points and add to array 'allPoints'\r\n      for (let i = 0; i < 30; i++) {\r\n        let points = [\r\n          southWest.lat + latSpan * Math.random(),\r\n          southWest.lng + lngSpan * Math.random(),\r\n        ];\r\n        allPoints.push(points);\r\n      }\r\n\r\n      // add markers to feature group\r\n      for (let i = 0; i < allPoints.length; i++) {\r\n        L.marker(allPoints[i], {\r\n          icon: L.divIcon({\r\n            className: \"custom-icon-marker\",\r\n            iconSize: L.point(40, 40),\r\n            html: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" class=\"marker\"><path fill-opacity=\"0.25\" d=\"M16 32s1.427-9.585 3.761-12.025c4.595-4.805 8.685-.99 8.685-.99s4.044 3.964-.526 8.743C25.514 30.245 16 32 16 32z\"/><path stroke=\"#fff\" fill=\"#${randomColor()}\" d=\"M15.938 32S6 17.938 6 11.938C6 .125 15.938 0 15.938 0S26 .125 26 11.875C26 18.062 15.938 32 15.938 32zM16 6a4 4 0 100 8 4 4 0 000-8z\"/></svg>`,\r\n            iconAnchor: [12, 24],\r\n            popupAnchor: [9, -26],\r\n          }),\r\n        })\r\n          .bindPopup(`<b>Marker coordinates</b>:<br>${allPoints[i].toString()}`)\r\n          .addTo(fg);\r\n      }\r\n\r\n      // zoom to feature group and add padding\r\n      map.fitBounds(fg.getBounds(), { padding: [20, 20] });\r\n    }\r\n\r\n    //  remove markers from feature group\r\n    function removeMarkers() {\r\n      fg.clearLayers();\r\n    }\r\n\r\n    // initialize random marker\r\n    randomMarker();\r\n  }, [map]);\r\n\r\n  return null;\r\n};\r\n\r\nconst MapWrapper = () => {\r\n  const [map, setMap] = useState(null);\r\n\r\n  return (\r\n    <MapContainer\r\n      whenCreated={setMap}\r\n      center={center}\r\n      zoom={18}\r\n      scrollWheelZoom={false}\r\n    >\r\n      <TileLayer {...tileLayer} />\r\n\r\n      <RandomMarkerInMapBounds map={map} />\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default MapWrapper;\r\n","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layersContro;\n\n      (_context$layersContro = context.layersControl) == null ? void 0 : _context$layersContro.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","const tileLayer = {\r\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\r\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n}\r\n\r\nexport default tileLayer;","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer({\n  url,\n  ...options\n}, context) {\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);"],"sourceRoot":""}