{"version":3,"sources":["../node_modules/react-leaflet/esm/Marker.js","data/pin.png","pages/custom-marker-and-popup.module.css","pages/custom-marker-and-popup.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","util/tileLayer.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js","../node_modules/react-leaflet/esm/Popup.js"],"names":["Marker","createLayerComponent","ctx","position","options","instance","LeafletMarker","context","overlayContainer","marker","props","prevProps","setLatLng","icon","setIcon","zIndexOffset","setZIndexOffset","opacity","setOpacity","dragging","draggable","enable","disable","module","exports","center","pointerIcon","L","Icon","iconUrl","newMarker","iconSize","iconAnchor","popupAnchor","customPopup","width","title","height","src","frameBorder","allow","allowFullScreen","MapWrapper","zoom","scrollWheelZoom","tileLayer","className","styles","newPopup","minWidth","withPane","pane","useEventHandlers","element","eventHandlers","eventHandlersRef","useRef","useEffect","on","current","off","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","useLayerLifecycle","layerContainer","map","addLayer","_context$layersContro","layersControl","removeLayer","createLayerHook","useElement","useLeafletContext","elementRef","useAttribution","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","createContainerComponent","ContainerComponent","ref","useImperativeHandle","children","React","createElement","LeafletProvider","forwardRef","createDivOverlayComponent","OverlayComponent","useState","isOpen","setOpen","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","pathOptions","setStyle","createPathHook","createElementHook","updateElement","propsRef","createControlHook","positionRef","addTo","remove","setPosition","createDivOverlayHook","useLifecycle","url","createControlComponent","createInstance","useControl","useLayer","createOverlayComponent","useOverlay","createPathComponent","usePath","createTileLayerComponent","updateGridLayer","layer","zIndex","setZIndex","TileLayer","LeafletTileLayer","Popup","LeafletPopup","onClose","onOpen","onPopupOpen","event","popup","onPopupClose","popupopen","popupclose","openOn","bindPopup"],"mappings":"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","file":"static/js/pages-custom-marker-and-popup-js.4b670137.chunk.js","sourcesContent":["import { createLayerComponent } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker({\n  position,\n  ...options\n}, ctx) {\n  const instance = new LeafletMarker(position, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateMarker(marker, props, prevProps) {\n  if (props.position !== prevProps.position) {\n    marker.setLatLng(props.position);\n  }\n\n  if (props.icon != null && props.icon !== prevProps.icon) {\n    marker.setIcon(props.icon);\n  }\n\n  if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n    marker.setZIndexOffset(props.zIndexOffset);\n  }\n\n  if (props.opacity != null && props.opacity !== prevProps.opacity) {\n    marker.setOpacity(props.opacity);\n  }\n\n  if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n    if (props.draggable === true) {\n      marker.dragging.enable();\n    } else {\n      marker.dragging.disable();\n    }\n  }\n});","export default __webpack_public_path__ + \"static/media/pin.5c3f4112.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPopup\":\"custom-marker-and-popup_newPopup__2u1T6\",\"leaflet-popup-content-wrapper\":\"custom-marker-and-popup_leaflet-popup-content-wrapper__3dPXl\",\"leaflet-popup-tip\":\"custom-marker-and-popup_leaflet-popup-tip__woOp3\"};","import { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport newMarker from \"../data/pin.png\";\r\nimport styles from \"./custom-marker-and-popup.module.css\";\r\nimport tileLayer from \"../util/tileLayer\";\r\n\r\nconst center = [52.22977, 21.01178];\r\n\r\nconst pointerIcon = new L.Icon({\r\n  iconUrl: newMarker,\r\n  iconSize: [50, 58], // size of the icon\r\n  iconAnchor: [20, 58], // changed marker icon position\r\n  popupAnchor: [0, -60], // changed popup position\r\n});\r\n\r\nconst customPopup = (\r\n  <iframe\r\n    width=\"auto\"\r\n    title=\"Marek Grechuta\"\r\n    height=\"310\"\r\n    src=\"https://www.youtube.com/embed/glKDhBuoRUs\"\r\n    frameBorder=\"0\"\r\n    allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n    allowFullScreen\r\n  ></iframe>\r\n);\r\n\r\nconst MapWrapper = () => {\r\n  return (\r\n    <MapContainer center={center} zoom={18} scrollWheelZoom={false}>\r\n      <TileLayer {...tileLayer} />\r\n\r\n      <Marker icon={pointerIcon} position={center}>\r\n        <Popup className={styles.newPopup} minWidth={300}>\r\n          {customPopup}\r\n        </Popup>\r\n      </Marker>\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default MapWrapper;\r\n","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layersContro;\n\n      (_context$layersContro = context.layersControl) == null ? void 0 : _context$layersContro.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","const tileLayer = {\r\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\r\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n}\r\n\r\nexport default tileLayer;","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer({\n  url,\n  ...options\n}, context) {\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);","import { createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n  return {\n    instance: new LeafletPopup(props, context.overlayContainer),\n    context\n  };\n}, function usePopupLifecycle(element, context, props, setOpen) {\n  const {\n    onClose,\n    onOpen,\n    position\n  } = props;\n  useEffect(function addPopup() {\n    const {\n      instance\n    } = element;\n\n    function onPopupOpen(event) {\n      if (event.popup === instance) {\n        instance.update();\n        setOpen(true);\n        onOpen == null ? void 0 : onOpen();\n      }\n    }\n\n    function onPopupClose(event) {\n      if (event.popup === instance) {\n        setOpen(false);\n        onClose == null ? void 0 : onClose();\n      }\n    }\n\n    context.map.on({\n      popupopen: onPopupOpen,\n      popupclose: onPopupClose\n    });\n\n    if (context.overlayContainer == null) {\n      // Attach to a Map\n      if (position != null) {\n        instance.setLatLng(position);\n      }\n\n      instance.openOn(context.map);\n    } else {\n      // Attach to container component\n      context.overlayContainer.bindPopup(instance);\n    }\n\n    return function removePopup() {\n      context.map.off({\n        popupopen: onPopupOpen,\n        popupclose: onPopupClose\n      });\n      context.map.removeLayer(instance);\n    };\n  }, [element, context, setOpen, onClose, onOpen, position]);\n});"],"sourceRoot":""}