{"version":3,"sources":["../node_modules/react-leaflet/esm/LayersControl.js","pages/multiple-tile-layers.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js"],"names":["useLayersControlElement","createElementHook","ctx","children","options","instance","Control","Layers","undefined","context","layersControl","control","props","prevProps","collapsed","collapse","expand","useLayersControl","createControlHook","LayersControl","createContainerComponent","createControlledLayer","addLayerToControl","parentContext","useLeafletContext","propsRef","useRef","useState","layer","setLayer","map","addLayer","useCallback","layerToAdd","current","checked","name","removeLayer","layerToRemove","useMemo","layerContainer","useEffect","React","createElement","LeafletProvider","value","BaseLayer","addBaseLayer","Overlay","addOverlay","center","layers","attribution","url","MapWrapper","zoom","scrollWheelZoom","position","index","withPane","pane","useEventHandlers","element","eventHandlers","eventHandlersRef","on","off","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","useLayerLifecycle","_context$layersContro","createLayerHook","useElement","elementRef","useAttribution","attributionRef","attributionControl","removeAttribution","addAttribution","ContainerComponent","ref","useImperativeHandle","forwardRef","createDivOverlayComponent","OverlayComponent","isOpen","setOpen","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","pathOptions","setStyle","createPathHook","updateElement","positionRef","addTo","remove","setPosition","createDivOverlayHook","useLifecycle","createControlComponent","createInstance","useControl","createLayerComponent","useLayer","createOverlayComponent","useOverlay","createPathComponent","usePath","createTileLayerComponent","updateGridLayer","opacity","zIndex","setOpacity","setZIndex","TileLayer","LeafletTileLayer"],"mappings":"8PAGaA,EAA0BC,aAAkB,WAGtDC,GAAK,EAFNC,SAEM,IADHC,EACG,4BACAC,EAAW,IAAIC,UAAQC,YAAOC,OAAWA,EAAWJ,GAC1D,MAAO,CACLC,WACAI,QAAS,2BAAKP,GAAP,IACLQ,cAAeL,QAGlB,SAA6BM,EAASC,EAAOC,GAC1CD,EAAME,YAAcD,EAAUC,aACR,IAApBF,EAAME,UACRH,EAAQI,WAERJ,EAAQK,aAIDC,EAAmBC,YAAkBlB,GAErCmB,EAAgBC,YAAyBH,GAC/C,SAASI,EAAsBC,GACpC,OAAO,SAAyBV,GAC9B,IAAMW,EAAgBC,cAChBC,EAAWC,iBAAOd,GAFa,EAGXe,mBAAS,MAHE,mBAG9BC,EAH8B,KAGvBC,EAHuB,KAKnCnB,EAEEa,EAFFb,cACAoB,EACEP,EADFO,IAEIC,EAAWC,uBAAY,SAAAC,GACN,MAAjBvB,IACEe,EAASS,QAAQC,SACnBL,EAAIC,SAASE,GAGfX,EAAkBZ,EAAeuB,EAAYR,EAASS,QAAQE,MAC9DP,EAASI,MAEV,CAACvB,EAAeoB,IACbO,EAAcL,uBAAY,SAAAM,GACb,MAAjB5B,GAAiCA,EAAc2B,YAAYC,GAC3DT,EAAS,QACR,CAACnB,IACED,EAAU8B,mBAAQ,8BAAC,eAAWhB,GAAZ,IACtBiB,eAAgB,CACdT,WACAM,mBAEA,CAACd,EAAeQ,EAAUM,IAY9B,OAXAI,qBAAU,WACM,OAAVb,GAAkBH,EAASS,UAAYtB,KACnB,IAAlBA,EAAMuB,SAAiD,MAA5BV,EAASS,QAAQC,UAAgD,IAA7BV,EAASS,QAAQC,SAE5C,IAA7BV,EAASS,QAAQC,SAAsC,MAAjBvB,EAAMuB,UAAqC,IAAlBvB,EAAMuB,SAC9EL,EAAIO,YAAYT,GAFhBE,EAAIC,SAASH,GAKfH,EAASS,QAAUtB,MAGhBA,EAAMT,SAAwBuC,IAAMC,cAAcC,IAAiB,CACxEC,MAAOpC,GACNG,EAAMT,UAAY,MAGzBgB,EAAc2B,UAAYzB,GAAsB,SAAsBX,EAAekB,EAAOQ,GAC1F1B,EAAcqC,aAAanB,EAAOQ,MAEpCjB,EAAc6B,QAAU3B,GAAsB,SAAoBX,EAAekB,EAAOQ,GACtF1B,EAAcuC,WAAWrB,EAAOQ,O,gCC3ElC,4CAEMc,EAAS,CAAC,SAAU,UAEpBC,EAAS,CACb,CACEf,KAAM,aACNgB,YAAa,4FACbC,IAAK,qDAEP,CACEjB,KAAM,UACNgB,YAAa,4EACbC,IAAK,2EAgCMC,UA5BI,WAGjB,OACE,cAAC,IAAD,CAAcJ,OAAQA,EAAQK,KAAM,GAAIC,iBAAiB,EAAzD,SAEE,cAAC,IAAD,CAAeC,SAAS,WAAxB,SAEGN,EAAOrB,KAAI,SAACF,EAAO8B,GAClB,OACE,cAAC,IAAcZ,UAAf,CAEEX,QAAmB,IAAVuB,EACTtB,KAAMR,EAAMQ,KAHd,SAKE,cAAC,IAAD,CACEgB,YAAaxB,EAAMwB,YACnBC,IAAKzB,EAAMyB,OANRK,Y,8EC5BZ,SAASC,EAAS/C,EAAOH,GAAS,MACjCmD,EAAI,UAAGhD,EAAMgD,YAAT,QAAiBnD,EAAQmD,KACnC,OAAOA,EAAO,2BAAKhD,GAAR,IACTgD,SACEhD,I,gCCJN,6CACO,SAASiD,EAAiBC,EAASC,GACxC,IAAMC,EAAmBtC,mBACzBe,qBAAU,WAMR,OALqB,MAAjBsB,GACFD,EAAQzD,SAAS4D,GAAGF,GAGtBC,EAAiB9B,QAAU6B,EACpB,WAC2B,MAA5BC,EAAiB9B,SACnB4B,EAAQzD,SAAS6D,IAAIF,EAAiB9B,SAGxC8B,EAAiB9B,QAAU,QAE5B,CAAC4B,EAASC,M,gCChBA,SAASI,EAAgBC,EAAKC,EAAKxB,GAYhD,OAXIwB,KAAOD,EACTE,OAAOC,eAAeH,EAAKC,EAAK,CAC9BxB,MAAOA,EACP2B,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZN,EAAIC,GAAOxB,EAGNuB,ECVT,SAASO,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eAEtDM,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,EAGM,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNb,EAAQL,OAAOqB,IAAS,GAAMC,SAAQ,SAAUvB,GAC9C,EAAekB,EAAQlB,EAAKsB,EAAOtB,OAE5BC,OAAOuB,0BAChBvB,OAAOwB,iBAAiBP,EAAQjB,OAAOuB,0BAA0BF,IAEjEhB,EAAQL,OAAOqB,IAASC,SAAQ,SAAUvB,GACxCC,OAAOC,eAAegB,EAAQlB,EAAKC,OAAOa,yBAAyBQ,EAAQtB,OAKjF,OAAOkB,E,mECjCT,+GAKO,SAASQ,EAAkBjC,EAASrD,GACzCgC,qBAAU,WAAoB,MAG5B,OAFe,UAAGhC,EAAQ+B,sBAAX,QAA6B/B,EAAQqB,KAC1CC,SAAS+B,EAAQzD,UACpB,WACL,IAAI2F,EAE+C,OAAlDA,EAAwBvF,EAAQC,gBAAkCsF,EAAsB3D,YAAYyB,EAAQzD,UAC7GI,EAAQqB,IAAIO,YAAYyB,EAAQzD,aAEjC,CAACI,EAASqD,IAER,SAASmC,EAAgBC,GAC9B,OAAO,SAAkBtF,GACvB,IAAMH,EAAUe,cACV2E,EAAaD,EAAWvC,YAAS/C,EAAOH,GAAUA,GAIxD,OAHA2F,YAAe3F,EAAQqB,IAAKlB,EAAMwC,aAClCS,YAAiBsC,EAAWjE,QAAStB,EAAMmD,eAC3CgC,EAAkBI,EAAWjE,QAASzB,GAC/B0F,K,gCCxBX,6CACO,SAASC,EAAetE,EAAKsB,GAClC,IAAMiD,EAAiB3E,iBAAO0B,GAC9BX,qBAAU,WACJW,IAAgBiD,EAAenE,SAAqC,MAA1BJ,EAAIwE,qBAClB,MAA1BD,EAAenE,SACjBJ,EAAIwE,mBAAmBC,kBAAkBF,EAAenE,SAGvC,MAAfkB,GACFtB,EAAIwE,mBAAmBE,eAAepD,IAI1CiD,EAAenE,QAAUkB,IACxB,CAACtB,EAAKsB,M,iLCZJ,SAAShC,EAAyB8E,GACvC,SAASO,EAAmB7F,EAAO8F,GAAK,MAIlCR,EAAWtF,GAAOsB,QAFpB7B,EAFoC,EAEpCA,SACAI,EAHoC,EAGpCA,QAGF,OADAkG,8BAAoBD,GAAK,kBAAMrG,KACN,MAAlBO,EAAMT,SAAmB,KAAoBuC,IAAMC,cAAcC,IAAiB,CACvFC,MAAOpC,GACNG,EAAMT,UAGX,OAAoByG,qBAAWH,GAE1B,SAASI,EAA0BX,GACxC,SAASY,EAAiBlG,EAAO8F,GAAK,MACV/E,oBAAS,GADC,mBAC7BoF,EAD6B,KACrBC,EADqB,KAGlC3G,EACE6F,EAAWtF,EAAOoG,GAAS9E,QAD7B7B,SAEFsG,8BAAoBD,GAAK,kBAAMrG,KAC/BoC,qBAAU,WACJsE,GACF1G,EAAS4G,WAEV,CAAC5G,EAAU0G,EAAQnG,EAAMT,WAE5B,IAAM+G,EAAc7G,EAAS8G,aAC7B,OAAOD,EAA2BE,uBAAaxG,EAAMT,SAAU+G,GAAe,KAGhF,OAAoBN,qBAAWE,GAE1B,SAASO,EAAoBnB,GAClC,SAASoB,EAAc1G,EAAO8F,GAAK,IAE/BrG,EACE6F,EAAWtF,GAAOsB,QADpB7B,SAGF,OADAsG,8BAAoBD,GAAK,kBAAMrG,KACxB,KAGT,OAAoBuG,qBAAWU,K,gCC7CjC,+GAKO,SAASC,EAAezD,EAASlD,GACtC,IAAM4G,EAAa9F,mBACnBe,qBAAU,WACR,GAAI7B,EAAM6G,cAAgBD,EAAWtF,QAAS,OACtC9B,EAAO,UAAGQ,EAAM6G,mBAAT,QAAwB,GACrC3D,EAAQzD,SAASqH,SAAStH,GAC1BoH,EAAWtF,QAAU9B,KAEtB,CAAC0D,EAASlD,IAER,SAAS+G,EAAezB,GAC7B,OAAO,SAAiBtF,GACtB,IAAMH,EAAUe,cACV2E,EAAaD,EAAWvC,YAAS/C,EAAOH,GAAUA,GAIxD,OAHAoD,YAAiBsC,EAAWjE,QAAStB,EAAMmD,eAC3CgC,YAAkBI,EAAWjE,QAASzB,GACtC8G,EAAepB,EAAWjE,QAAStB,GAC5BuF,K,gCCtBX,6CACO,SAASlG,EAAkB0C,EAAeiF,GAC/C,OAAqB,MAAjBA,EACK,SAAoChH,EAAOH,GAChD,OAAOiB,iBAAOiB,EAAc/B,EAAOH,KAIhC,SAAkCG,EAAOH,GAC9C,IAAM0F,EAAazE,iBAAOiB,EAAc/B,EAAOH,IACzCgB,EAAWC,iBAAOd,GAEtBP,EACE8F,EAAWjE,QADb7B,SAQF,OANAoC,qBAAU,WACJhB,EAASS,UAAYtB,IACvBgH,EAAcvH,EAAUO,EAAOa,EAASS,SACxCT,EAASS,QAAUtB,KAEpB,CAACP,EAAUO,EAAOH,IACd0F,K,gCCpBX,qDAEO,SAASjF,EAAkBgF,GAChC,OAAO,SAA2BtF,GAChC,IAAMH,EAAUe,cACV2E,EAAaD,EAAWtF,EAAOH,GAEnCJ,EACE8F,EAAWjE,QADb7B,SAEIwH,EAAcnG,iBAAOd,EAAM6C,UAE/BA,EACE7C,EADF6C,SAcF,OAZAhB,qBAAU,WAER,OADApC,EAASyH,MAAMrH,EAAQqB,KAChB,WACLzB,EAAS0H,YAEV,CAACtH,EAAQqB,IAAKzB,IACjBoC,qBAAU,WACQ,MAAZgB,GAAoBA,IAAaoE,EAAY3F,UAC/C7B,EAAS2H,YAAYvE,GACrBoE,EAAY3F,QAAUuB,KAEvB,CAACpD,EAAUoD,IACP0C,K,gCCzBX,sEAIO,SAAS8B,EAAqB/B,EAAYgC,GAC/C,OAAO,SAAuBtH,EAAOoG,GACnC,IAAMvG,EAAUe,cACV2E,EAAaD,EAAWvC,YAAS/C,EAAOH,GAAUA,GAIxD,OAHA2F,YAAe3F,EAAQqB,IAAKlB,EAAMwC,aAClCS,YAAiBsC,EAAWjE,QAAStB,EAAMmD,eAC3CmE,EAAa/B,EAAWjE,QAASzB,EAASG,EAAOoG,GAC1Cb,K,gCCXX,8NAMO,SAASgC,EAAuBC,GAQrC,IAAMlC,EAAajG,aAPnB,SAAuBW,EAAOH,GAC5B,MAAO,CACLJ,SAAU+H,EAAexH,GACzBH,cAKE4H,EAAanH,YAAkBgF,GACrC,OAAOmB,YAAoBgB,GAEtB,SAASC,EAAqB3F,EAAeiF,GAClD,IAAM1B,EAAajG,YAAkB0C,EAAeiF,GAC9CW,EAAWtC,YAAgBC,GACjC,OAAO9E,YAAyBmH,GAE3B,SAASC,EAAuB7F,EAAeuF,GACpD,IAAMhC,EAAajG,YAAkB0C,GAC/B8F,EAAaR,YAAqB/B,EAAYgC,GACpD,OAAOrB,YAA0B4B,GAE5B,SAASC,EAAoB/F,EAAeiF,GACjD,IAAM1B,EAAajG,YAAkB0C,EAAeiF,GAC9Ce,EAAUhB,YAAezB,GAC/B,OAAO9E,YAAyBuH,GAE3B,SAASC,EAAyBjG,EAAeiF,GACtD,IAAM1B,EAAajG,YAAkB0C,EAAeiF,GAC9CW,EAAWtC,YAAgBC,GACjC,OAAOmB,YAAoBkB,K,gCCpCtB,SAASM,EAAgBjH,EAAOhB,EAAOC,GAAW,IAErDiI,EAEElI,EAFFkI,QACAC,EACEnI,EADFmI,OAGa,MAAXD,GAAmBA,IAAYjI,EAAUiI,SAC3ClH,EAAMoH,WAAWF,GAGL,MAAVC,GAAkBA,IAAWlI,EAAUkI,QACzCnH,EAAMqH,UAAUF,GAXpB,mC,8GCEaG,EAAYN,aAAyB,WAG/CnI,GAAS,IAFV4C,EAEU,EAFVA,IACGjD,EACO,uBACV,MAAO,CACLC,SAAU,IAAI8I,YAAiB9F,EAAKM,YAASvD,EAASK,IACtDA,aAEDoI","file":"static/js/pages-multiple-tile-layers-js.4eada7eb.chunk.js","sourcesContent":["import { LeafletProvider, createContainerComponent, createControlHook, createElementHook, useLeafletContext } from '@react-leaflet/core';\nimport { Control } from 'leaflet';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nexport const useLayersControlElement = createElementHook(function createLayersControl({\n  children: _c,\n  ...options\n}, ctx) {\n  const instance = new Control.Layers(undefined, undefined, options);\n  return {\n    instance,\n    context: { ...ctx,\n      layersControl: instance\n    }\n  };\n}, function updateLayersControl(control, props, prevProps) {\n  if (props.collapsed !== prevProps.collapsed) {\n    if (props.collapsed === true) {\n      control.collapse();\n    } else {\n      control.expand();\n    }\n  }\n});\nexport const useLayersControl = createControlHook(useLayersControlElement);\n// @ts-ignore\nexport const LayersControl = createContainerComponent(useLayersControl);\nexport function createControlledLayer(addLayerToControl) {\n  return function ControlledLayer(props) {\n    const parentContext = useLeafletContext();\n    const propsRef = useRef(props);\n    const [layer, setLayer] = useState(null);\n    const {\n      layersControl,\n      map\n    } = parentContext;\n    const addLayer = useCallback(layerToAdd => {\n      if (layersControl != null) {\n        if (propsRef.current.checked) {\n          map.addLayer(layerToAdd);\n        }\n\n        addLayerToControl(layersControl, layerToAdd, propsRef.current.name);\n        setLayer(layerToAdd);\n      }\n    }, [layersControl, map]);\n    const removeLayer = useCallback(layerToRemove => {\n      layersControl == null ? void 0 : layersControl.removeLayer(layerToRemove);\n      setLayer(null);\n    }, [layersControl]);\n    const context = useMemo(() => ({ ...parentContext,\n      layerContainer: {\n        addLayer,\n        removeLayer\n      }\n    }), [parentContext, addLayer, removeLayer]);\n    useEffect(() => {\n      if (layer !== null && propsRef.current !== props) {\n        if (props.checked === true && (propsRef.current.checked == null || propsRef.current.checked === false)) {\n          map.addLayer(layer);\n        } else if (propsRef.current.checked === true && (props.checked == null || props.checked === false)) {\n          map.removeLayer(layer);\n        }\n\n        propsRef.current = props;\n      }\n    });\n    return props.children ? /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children) : null;\n  };\n}\nLayersControl.BaseLayer = createControlledLayer(function addBaseLayer(layersControl, layer, name) {\n  layersControl.addBaseLayer(layer, name);\n});\nLayersControl.Overlay = createControlledLayer(function addOverlay(layersControl, layer, name) {\n  layersControl.addOverlay(layer, name);\n});","import { MapContainer, TileLayer, LayersControl } from 'react-leaflet';\r\n\r\nconst center = [52.22977, 21.01178];\r\n\r\nconst layers = [\r\n  {\r\n    name: \"Osm Mapnik\",\r\n    attribution: '&copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a>OpenStreetMap</a> contributors',\r\n    url: 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n  },\r\n  {\r\n    name: \"CartoDB\",\r\n    attribution: '&copy; <a href=\"http://cartodb.com/attributions\">CartoDB</a> contributors',\r\n    url: 'https://{s}.basemaps.cartocdn.com/rastertiles/dark_all/{z}/{x}/{y}.png'\r\n  }\r\n]\r\n\r\nconst MapWrapper = () => {\r\n\r\n\r\n  return (\r\n    <MapContainer center={center} zoom={13} scrollWheelZoom={false}>\r\n\r\n      <LayersControl position=\"topright\">\r\n\r\n        {layers.map((layer, index) => {\r\n          return (\r\n            <LayersControl.BaseLayer\r\n              key={index}\r\n              checked={index === 0 ? true : false}\r\n              name={layer.name}\r\n            >\r\n              <TileLayer\r\n                attribution={layer.attribution}\r\n                url={layer.url}\r\n              />\r\n            </LayersControl.BaseLayer>\r\n          )\r\n        })}\r\n\r\n      </LayersControl>\r\n    </MapContainer>\r\n  )\r\n}\r\n\r\nexport default MapWrapper;","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layersContro;\n\n      (_context$layersContro = context.layersControl) == null ? void 0 : _context$layersContro.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer({\n  url,\n  ...options\n}, context) {\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);"],"sourceRoot":""}