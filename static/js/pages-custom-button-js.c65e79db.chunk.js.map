{"version":3,"sources":["pages/custom-button.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","util/tileLayer.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js"],"names":["center","CustomButton","map","useEffect","customControler","L","Control","extend","options","position","onAdd","btn","DomUtil","create","title","textContent","className","onmouseover","this","style","transform","onmouseout","onclick","document","body","classList","add","setTimeout","remove","addControl","MapWrapper","useState","setMap","whenCreated","zoom","scrollWheelZoom","tileLayer","withPane","props","context","pane","useEventHandlers","element","eventHandlers","eventHandlersRef","useRef","instance","on","current","off","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","useLayerLifecycle","layerContainer","addLayer","_context$layersContro","layersControl","removeLayer","createLayerHook","useElement","useLeafletContext","elementRef","useAttribution","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","createContainerComponent","ContainerComponent","ref","useImperativeHandle","children","React","createElement","LeafletProvider","forwardRef","createDivOverlayComponent","OverlayComponent","isOpen","setOpen","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","pathOptions","setStyle","createPathHook","createElementHook","updateElement","propsRef","createControlHook","positionRef","addTo","setPosition","createDivOverlayHook","useLifecycle","url","createControlComponent","createInstance","useControl","createLayerComponent","useLayer","createOverlayComponent","useOverlay","createPathComponent","usePath","createTileLayerComponent","updateGridLayer","layer","prevProps","opacity","zIndex","setOpacity","setZIndex","TileLayer","LeafletTileLayer"],"mappings":"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","file":"static/js/pages-custom-button-js.c65e79db.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { MapContainer, TileLayer } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport \"./custom-button.css\";\r\nimport tileLayer from \"../util/tileLayer\";\r\n\r\nconst center = [52.22977, 21.01178];\r\n\r\nconst CustomButton = ({ map }) => {\r\n  useEffect(() => {\r\n    if (!map) return;\r\n\r\n    const customControler = L.Control.extend({\r\n      options: {\r\n        position: \"topright\",\r\n      },\r\n\r\n      onAdd: function () {\r\n        const btn = L.DomUtil.create(\"button\");\r\n        btn.title = \"pooooooooooooop rotation\";\r\n        btn.textContent = \"ğŸ’©\";\r\n        btn.className = \"customButton\";\r\n\r\n        btn.onmouseover = function () {\r\n          this.style.transform = \"scale(1.3)\";\r\n        };\r\n\r\n        btn.onmouseout = function () {\r\n          this.style.transform = \"scale(1)\";\r\n        };\r\n\r\n        btn.onclick = function () {\r\n          document.body.classList.add(\"rotate\");\r\n\r\n          setTimeout(() => {\r\n            document.body.classList.remove(\"rotate\");\r\n          }, 4000);\r\n        };\r\n\r\n        return btn;\r\n      },\r\n    });\r\n\r\n    map.addControl(new customControler());\r\n  }, [map]);\r\n\r\n  return null;\r\n};\r\n\r\nconst MapWrapper = () => {\r\n  const [map, setMap] = useState(null);\r\n\r\n  return (\r\n    <MapContainer\r\n      whenCreated={setMap}\r\n      center={center}\r\n      zoom={18}\r\n      scrollWheelZoom={false}\r\n    >\r\n      <TileLayer {...tileLayer} />\r\n\r\n      <CustomButton map={map} />\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default MapWrapper;\r\n","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layersContro;\n\n      (_context$layersContro = context.layersControl) == null ? void 0 : _context$layersContro.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","const tileLayer = {\r\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\r\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n}\r\n\r\nexport default tileLayer;","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer({\n  url,\n  ...options\n}, context) {\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);"],"sourceRoot":""}