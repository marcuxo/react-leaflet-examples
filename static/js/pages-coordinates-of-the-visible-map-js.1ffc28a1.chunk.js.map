{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/react-leaflet/esm/Rectangle.js","pages/coordinates-of-the-visible-map.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","util/tileLayer.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Rectangle","createPathComponent","ctx","bounds","options","instance","LeafletRectangle","context","overlayContainer","layer","props","prevProps","setBounds","center","SetRentacle","map","bound","index","color","Math","floor","random","toString","weight","fillOpacity","contentText","getBounds","_northEast","_southWest","Location","useState","useEffect","info","L","DomUtil","create","positon","Control","extend","position","onAdd","innerHTML","addControl","on","textContent","b","length","MapWrapper","setMap","MapContainer","whenCreated","zoom","scrollWheelZoom","TileLayer","tileLayer","withPane","pane","useEventHandlers","element","eventHandlers","eventHandlersRef","useRef","current","off","_defineProperty","obj","key","value","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","useLayerLifecycle","layerContainer","addLayer","_context$layersContro","layersControl","removeLayer","createLayerHook","useElement","useLeafletContext","elementRef","useAttribution","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","createContainerComponent","ContainerComponent","ref","useImperativeHandle","children","React","createElement","LeafletProvider","forwardRef","createDivOverlayComponent","OverlayComponent","isOpen","setOpen","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","pathOptions","setStyle","createPathHook","createElementHook","updateElement","propsRef","createControlHook","positionRef","addTo","remove","setPosition","createDivOverlayHook","useLifecycle","url","createControlComponent","createInstance","useControl","createLayerComponent","useLayer","createOverlayComponent","useOverlay","usePath","createTileLayerComponent","updateGridLayer","opacity","zIndex","setOpacity","setZIndex","LeafletTileLayer"],"mappings":"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","file":"static/js/pages-coordinates-of-the-visible-map-js.1ffc28a1.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { createPathComponent } from '@react-leaflet/core';\nimport { Rectangle as LeafletRectangle } from 'leaflet';\nexport const Rectangle = createPathComponent(function createRectangle({\n  bounds,\n  ...options\n}, ctx) {\n  const instance = new LeafletRectangle(bounds, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateRectangle(layer, props, prevProps) {\n  if (props.bounds !== prevProps.bounds) {\n    layer.setBounds(props.bounds);\n  }\n});","import { useEffect, useState } from 'react';\r\nimport { MapContainer, Rectangle, TileLayer } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport tileLayer from '../util/tileLayer';\r\n\r\nconst center = [52.22977, 21.01178];\r\n\r\nfunction getRandomColor() {\r\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`.toString();\r\n}\r\n\r\nconst SetRentacle = ({ bounds }) => {\r\n  return bounds.map((bound, index) => (\r\n    <Rectangle\r\n      key={index}\r\n      bounds={bound}\r\n      color={getRandomColor()}\r\n      weight={10}\r\n      fillOpacity={0.1} />\r\n  ));\r\n}\r\n\r\nfunction contentText(getBounds) {\r\n  const { _northEast, _southWest } = getBounds;\r\n  return `SouthWest: ${_southWest}, NorthEast: ${_northEast}`;\r\n}\r\n\r\nconst Location = ({ map }) => {\r\n  const [bounds, setBounds] = useState([])\r\n\r\n  useEffect(() => {\r\n    if (!map) return;\r\n\r\n    const info = L.DomUtil.create('div', 'legend');\r\n\r\n    const positon = L.Control.extend({\r\n      options: {\r\n        position: 'bottomleft'\r\n      },\r\n\r\n      onAdd: function () {\r\n        info.innerHTML = contentText(map.getBounds());\r\n        return info;\r\n      }\r\n    })\r\n\r\n    map.addControl(new positon());\r\n\r\n    map.on('moveend zoomend', () => {\r\n      const bounds = map.getBounds();\r\n      info.textContent = contentText(bounds);\r\n      setBounds(b => [...b, bounds])\r\n    });\r\n\r\n  }, [map])\r\n\r\n  return bounds?.length <= 0\r\n    ? <SetRentacle bounds={bounds} />\r\n    : null;\r\n}\r\n\r\nconst MapWrapper = () => {\r\n  const [map, setMap] = useState(null)\r\n\r\n  return (\r\n    <MapContainer\r\n      whenCreated={setMap}\r\n      center={center}\r\n      zoom={18}\r\n      scrollWheelZoom={false}\r\n    >\r\n\r\n      <TileLayer {...tileLayer} />\r\n\r\n      <Location map={map} />\r\n\r\n    </MapContainer>\r\n  )\r\n}\r\n\r\nexport default MapWrapper;","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layersContro;\n\n      (_context$layersContro = context.layersControl) == null ? void 0 : _context$layersContro.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","const tileLayer = {\r\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\r\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n}\r\n\r\nexport default tileLayer;","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer({\n  url,\n  ...options\n}, context) {\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);"],"sourceRoot":""}