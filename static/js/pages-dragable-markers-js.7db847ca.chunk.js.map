{"version":3,"sources":["../node_modules/react-leaflet/esm/Marker.js","pages/dragable-markers.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","util/tileLayer.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js","../node_modules/react-leaflet/esm/Popup.js"],"names":["Marker","createLayerComponent","ctx","position","options","instance","LeafletMarker","context","overlayContainer","marker","props","prevProps","setLatLng","icon","setIcon","zIndexOffset","setZIndexOffset","opacity","setOpacity","dragging","draggable","enable","disable","center","points","lat","lng","title","MapWrapper","useState","map","setMap","text","setText","useEffect","legend","L","control","onAdd","div","DomUtil","create","innerHTML","addTo","eventHandlers","useMemo","dragend","e","target","getLatLng","whenCreated","zoom","scrollWheelZoom","tileLayer","index","autoPan","withPane","pane","useEventHandlers","element","eventHandlersRef","useRef","on","current","off","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","useLayerLifecycle","layerContainer","addLayer","_context$layersContro","layersControl","removeLayer","createLayerHook","useElement","useLeafletContext","elementRef","useAttribution","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","createContainerComponent","ContainerComponent","ref","useImperativeHandle","children","React","createElement","LeafletProvider","forwardRef","createDivOverlayComponent","OverlayComponent","isOpen","setOpen","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","pathOptions","setStyle","createPathHook","createElementHook","updateElement","propsRef","createControlHook","positionRef","remove","setPosition","createDivOverlayHook","useLifecycle","url","createControlComponent","createInstance","useControl","useLayer","createOverlayComponent","useOverlay","createPathComponent","usePath","createTileLayerComponent","updateGridLayer","layer","zIndex","setZIndex","TileLayer","LeafletTileLayer","Popup","LeafletPopup","onClose","onOpen","onPopupOpen","event","popup","onPopupClose","popupopen","popupclose","openOn","bindPopup"],"mappings":"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","file":"static/js/pages-dragable-markers-js.7db847ca.chunk.js","sourcesContent":["import { createLayerComponent } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker({\n  position,\n  ...options\n}, ctx) {\n  const instance = new LeafletMarker(position, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateMarker(marker, props, prevProps) {\n  if (props.position !== prevProps.position) {\n    marker.setLatLng(props.position);\n  }\n\n  if (props.icon != null && props.icon !== prevProps.icon) {\n    marker.setIcon(props.icon);\n  }\n\n  if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n    marker.setZIndexOffset(props.zIndexOffset);\n  }\n\n  if (props.opacity != null && props.opacity !== prevProps.opacity) {\n    marker.setOpacity(props.opacity);\n  }\n\n  if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n    if (props.draggable === true) {\n      marker.dragging.enable();\n    } else {\n      marker.dragging.disable();\n    }\n  }\n});","import { useEffect, useMemo, useState } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport tileLayer from '../util/tileLayer';\r\n\r\nconst center = [52.22977, 21.01178];\r\n\r\nconst points = [\r\n  {\r\n    lat: 52.230020586193795,\r\n    lng: 21.01083755493164,\r\n    title: 'point 1'\r\n  },\r\n  {\r\n    lat: 52.22924516170657,\r\n    lng: 21.011320352554325,\r\n    title: 'point 2'\r\n  },\r\n  {\r\n    lat: 52.229511304688444,\r\n    lng: 21.01270973682404,\r\n    title: 'point 3'\r\n  },\r\n  {\r\n    lat: 52.23040500771883,\r\n    lng: 21.012146472930908,\r\n    title: 'point 4'\r\n  },\r\n];\r\n\r\nconst MapWrapper = () => {\r\n  const [map, setMap] = useState(null);\r\n  const [text, setText] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (!map) return;\r\n\r\n    const legend = L.control({ position: \"bottomleft\" });\r\n\r\n    legend.onAdd = () => {\r\n      const div = L.DomUtil.create(\"div\", \"legend\");\r\n      div.innerHTML = `click marker, move`;\r\n      setText(div);\r\n      return div;\r\n    };\r\n\r\n    legend.addTo(map);\r\n\r\n  }, [map]);\r\n\r\n  const eventHandlers = useMemo(() => ({\r\n    dragend(e) {\r\n      text.innerHTML = e.target.getLatLng();\r\n    },\r\n  }), [text])\r\n\r\n  return (\r\n    <MapContainer\r\n      whenCreated={setMap}\r\n      center={center}\r\n      zoom={18}\r\n      scrollWheelZoom={false}\r\n    >\r\n\r\n      <TileLayer {...tileLayer} />\r\n\r\n      {points.map(({ lat, lng, title }, index) => (\r\n        <Marker\r\n          eventHandlers={eventHandlers}\r\n          key={index}\r\n          draggable={true}\r\n          autoPan={true}\r\n          position={[lat, lng]}\r\n        >\r\n          <Popup>{title}</Popup>\r\n        </Marker>\r\n      ))}\r\n\r\n    </MapContainer>\r\n  )\r\n}\r\n\r\nexport default MapWrapper;","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layersContro;\n\n      (_context$layersContro = context.layersControl) == null ? void 0 : _context$layersContro.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","const tileLayer = {\r\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\r\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n}\r\n\r\nexport default tileLayer;","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer({\n  url,\n  ...options\n}, context) {\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);","import { createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n  return {\n    instance: new LeafletPopup(props, context.overlayContainer),\n    context\n  };\n}, function usePopupLifecycle(element, context, props, setOpen) {\n  const {\n    onClose,\n    onOpen,\n    position\n  } = props;\n  useEffect(function addPopup() {\n    const {\n      instance\n    } = element;\n\n    function onPopupOpen(event) {\n      if (event.popup === instance) {\n        instance.update();\n        setOpen(true);\n        onOpen == null ? void 0 : onOpen();\n      }\n    }\n\n    function onPopupClose(event) {\n      if (event.popup === instance) {\n        setOpen(false);\n        onClose == null ? void 0 : onClose();\n      }\n    }\n\n    context.map.on({\n      popupopen: onPopupOpen,\n      popupclose: onPopupClose\n    });\n\n    if (context.overlayContainer == null) {\n      // Attach to a Map\n      if (position != null) {\n        instance.setLatLng(position);\n      }\n\n      instance.openOn(context.map);\n    } else {\n      // Attach to container component\n      context.overlayContainer.bindPopup(instance);\n    }\n\n    return function removePopup() {\n      context.map.off({\n        popupopen: onPopupOpen,\n        popupclose: onPopupClose\n      });\n      context.map.removeLayer(instance);\n    };\n  }, [element, context, setOpen, onClose, onOpen, position]);\n});"],"sourceRoot":""}