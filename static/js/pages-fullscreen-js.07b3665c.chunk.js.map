{"version":3,"sources":["../node_modules/leaflet-fullscreen/dist/Leaflet.fullscreen.js","pages/fullscreen.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","util/tileLayer.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js"],"names":["L","Control","Fullscreen","extend","options","position","title","onAdd","map","container","DomUtil","create","this","link","href","_map","on","_toggleTitle","DomEvent","_click","e","stopPropagation","preventDefault","toggleFullscreen","isFullscreen","Map","include","_isFullscreen","getContainer","pseudoFullscreen","_disablePseudoFullscreen","document","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","msExitFullscreen","_enablePseudoFullscreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","Element","ALLOW_KEYBOARD_INPUT","msRequestFullscreen","addClass","_setFullscreen","fire","removeClass","fullscreen","invalidateSize","_onFullscreenChange","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","mergeOptions","fullscreenControl","addInitHook","fullscreenchange","addControl","onFullscreenChange","bind","whenReady","off","control","center","MapWrapper","zoom","scrollWheelZoom","tileLayer","withPane","props","context","pane","useEventHandlers","element","eventHandlers","eventHandlersRef","useRef","useEffect","instance","current","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","useLayerLifecycle","layerContainer","addLayer","_context$layersContro","layersControl","removeLayer","createLayerHook","useElement","useLeafletContext","elementRef","useAttribution","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","createContainerComponent","ContainerComponent","ref","useImperativeHandle","children","React","createElement","LeafletProvider","forwardRef","createDivOverlayComponent","OverlayComponent","useState","isOpen","setOpen","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","pathOptions","setStyle","createPathHook","createElementHook","updateElement","propsRef","createControlHook","positionRef","addTo","remove","setPosition","createDivOverlayHook","useLifecycle","url","createControlComponent","createInstance","useControl","createLayerComponent","useLayer","createOverlayComponent","useOverlay","createPathComponent","usePath","createTileLayerComponent","updateGridLayer","layer","prevProps","opacity","zIndex","setOpacity","setZIndex","TileLayer","LeafletTileLayer"],"mappings":"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","file":"static/js/pages-fullscreen-js.07b3665c.chunk.js","sourcesContent":["L.Control.Fullscreen = L.Control.extend({\n    options: {\n        position: 'topleft',\n        title: {\n            'false': 'View Fullscreen',\n            'true': 'Exit Fullscreen'\n        }\n    },\n\n    onAdd: function (map) {\n        var container = L.DomUtil.create('div', 'leaflet-control-fullscreen leaflet-bar leaflet-control');\n\n        this.link = L.DomUtil.create('a', 'leaflet-control-fullscreen-button leaflet-bar-part', container);\n        this.link.href = '#';\n\n        this._map = map;\n        this._map.on('fullscreenchange', this._toggleTitle, this);\n        this._toggleTitle();\n\n        L.DomEvent.on(this.link, 'click', this._click, this);\n\n        return container;\n    },\n\n    _click: function (e) {\n        L.DomEvent.stopPropagation(e);\n        L.DomEvent.preventDefault(e);\n        this._map.toggleFullscreen(this.options);\n    },\n\n    _toggleTitle: function() {\n        this.link.title = this.options.title[this._map.isFullscreen()];\n    }\n});\n\nL.Map.include({\n    isFullscreen: function () {\n        return this._isFullscreen || false;\n    },\n\n    toggleFullscreen: function (options) {\n        var container = this.getContainer();\n        if (this.isFullscreen()) {\n            if (options && options.pseudoFullscreen) {\n                this._disablePseudoFullscreen(container);\n            } else if (document.exitFullscreen) {\n                document.exitFullscreen();\n            } else if (document.mozCancelFullScreen) {\n                document.mozCancelFullScreen();\n            } else if (document.webkitCancelFullScreen) {\n                document.webkitCancelFullScreen();\n            } else if (document.msExitFullscreen) {\n                document.msExitFullscreen();\n            } else {\n                this._disablePseudoFullscreen(container);\n            }\n        } else {\n            if (options && options.pseudoFullscreen) {\n                this._enablePseudoFullscreen(container);\n            } else if (container.requestFullscreen) {\n                container.requestFullscreen();\n            } else if (container.mozRequestFullScreen) {\n                container.mozRequestFullScreen();\n            } else if (container.webkitRequestFullscreen) {\n                container.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n            } else if (container.msRequestFullscreen) {\n                container.msRequestFullscreen();\n            } else {\n                this._enablePseudoFullscreen(container);\n            }\n        }\n\n    },\n\n    _enablePseudoFullscreen: function (container) {\n        L.DomUtil.addClass(container, 'leaflet-pseudo-fullscreen');\n        this._setFullscreen(true);\n        this.fire('fullscreenchange');\n    },\n\n    _disablePseudoFullscreen: function (container) {\n        L.DomUtil.removeClass(container, 'leaflet-pseudo-fullscreen');\n        this._setFullscreen(false);\n        this.fire('fullscreenchange');\n    },\n\n    _setFullscreen: function(fullscreen) {\n        this._isFullscreen = fullscreen;\n        var container = this.getContainer();\n        if (fullscreen) {\n            L.DomUtil.addClass(container, 'leaflet-fullscreen-on');\n        } else {\n            L.DomUtil.removeClass(container, 'leaflet-fullscreen-on');\n        }\n        this.invalidateSize();\n    },\n\n    _onFullscreenChange: function (e) {\n        var fullscreenElement =\n            document.fullscreenElement ||\n            document.mozFullScreenElement ||\n            document.webkitFullscreenElement ||\n            document.msFullscreenElement;\n\n        if (fullscreenElement === this.getContainer() && !this._isFullscreen) {\n            this._setFullscreen(true);\n            this.fire('fullscreenchange');\n        } else if (fullscreenElement !== this.getContainer() && this._isFullscreen) {\n            this._setFullscreen(false);\n            this.fire('fullscreenchange');\n        }\n    }\n});\n\nL.Map.mergeOptions({\n    fullscreenControl: false\n});\n\nL.Map.addInitHook(function () {\n    if (this.options.fullscreenControl) {\n        this.fullscreenControl = new L.Control.Fullscreen(this.options.fullscreenControl);\n        this.addControl(this.fullscreenControl);\n    }\n\n    var fullscreenchange;\n\n    if ('onfullscreenchange' in document) {\n        fullscreenchange = 'fullscreenchange';\n    } else if ('onmozfullscreenchange' in document) {\n        fullscreenchange = 'mozfullscreenchange';\n    } else if ('onwebkitfullscreenchange' in document) {\n        fullscreenchange = 'webkitfullscreenchange';\n    } else if ('onmsfullscreenchange' in document) {\n        fullscreenchange = 'MSFullscreenChange';\n    }\n\n    if (fullscreenchange) {\n        var onFullscreenChange = L.bind(this._onFullscreenChange, this);\n\n        this.whenReady(function () {\n            L.DomEvent.on(document, fullscreenchange, onFullscreenChange);\n        });\n\n        this.on('unload', function () {\n            L.DomEvent.off(document, fullscreenchange, onFullscreenChange);\n        });\n    }\n});\n\nL.control.fullscreen = function (options) {\n    return new L.Control.Fullscreen(options);\n};\n","import { MapContainer, TileLayer } from 'react-leaflet';\r\nimport 'leaflet-fullscreen/dist/Leaflet.fullscreen.js';\r\nimport 'leaflet-fullscreen/dist/leaflet.fullscreen.css';\r\nimport tileLayer from '../util/tileLayer';\r\n\r\nconst center = [52.22977, 21.01178];\r\n\r\nconst MapWrapper = () => {\r\n  return (\r\n    <MapContainer\r\n      fullscreenControl={true}\r\n      center={center}\r\n      zoom={13}\r\n      scrollWheelZoom={false}\r\n    >\r\n\r\n      <TileLayer {...tileLayer} />\r\n\r\n    </MapContainer>\r\n  )\r\n}\r\n\r\nexport default MapWrapper;","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layersContro;\n\n      (_context$layersContro = context.layersControl) == null ? void 0 : _context$layersContro.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","const tileLayer = {\r\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\r\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n}\r\n\r\nexport default tileLayer;","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer({\n  url,\n  ...options\n}, context) {\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);"],"sourceRoot":""}