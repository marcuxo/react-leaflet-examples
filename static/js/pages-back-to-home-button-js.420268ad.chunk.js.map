{"version":3,"sources":["../node_modules/react-leaflet/esm/hooks.js","pages/back-to-home-button.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","util/tileLayer.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js"],"names":["useMap","useLeafletContext","map","useMapEvent","type","handler","useEffect","on","off","center","HomeButton","dragend","getCenter","latD","lat","lngD","lng","checkEqualArrays","toFixed","document","body","classList","customControler","L","Control","extend","options","position","onAdd","btn","DomUtil","create","title","innerHTML","onclick","flyToBounds","remove","addControl","info","textContent","MapWrapper","useState","setMap","whenCreated","zoom","scrollWheelZoom","tileLayer","withPane","props","context","pane","useEventHandlers","element","eventHandlers","eventHandlersRef","useRef","instance","current","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","useLayerLifecycle","layerContainer","addLayer","_context$layersContro","layersControl","removeLayer","createLayerHook","useElement","elementRef","useAttribution","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","createContainerComponent","ContainerComponent","ref","useImperativeHandle","children","React","createElement","LeafletProvider","forwardRef","createDivOverlayComponent","OverlayComponent","isOpen","setOpen","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","pathOptions","setStyle","createPathHook","createElementHook","updateElement","propsRef","createControlHook","positionRef","addTo","setPosition","createDivOverlayHook","useLifecycle","url","createControlComponent","createInstance","useControl","createLayerComponent","useLayer","createOverlayComponent","useOverlay","createPathComponent","usePath","createTileLayerComponent","updateGridLayer","layer","prevProps","opacity","zIndex","setOpacity","setZIndex","TileLayer","LeafletTileLayer"],"mappings":"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","file":"static/js/pages-back-to-home-button-js.420268ad.chunk.js","sourcesContent":["import { useLeafletContext } from '@react-leaflet/core';\nimport { useEffect } from 'react';\nexport function useMap() {\n  return useLeafletContext().map;\n}\nexport function useMapEvent(type, handler) {\n  const map = useMap();\n  useEffect(function addMapEventHandler() {\n    // @ts-ignore event type\n    map.on(type, handler);\n    return function removeMapEventHandler() {\n      // @ts-ignore event type\n      map.off(type, handler);\n    };\n  }, [map, type, handler]);\n  return map;\n}\nexport function useMapEvents(handlers) {\n  const map = useMap();\n  useEffect(function addMapEventHandlers() {\n    map.on(handlers);\n    return function removeMapEventHandlers() {\n      map.off(handlers);\n    };\n  }, [map, handlers]);\n  return map;\n}","import { useState, useEffect } from \"react\";\r\nimport { MapContainer, TileLayer, useMapEvent } from \"react-leaflet\";\r\nimport \"./back-to-home-button.css\";\r\nimport L from \"leaflet\";\r\nimport tileLayer from \"../util/tileLayer\";\r\n\r\nconst center = [52.22977, 21.01178];\r\n\r\nconst HomeButton = ({ map }) => {\r\n  useMapEvent({\r\n    dragend() {\r\n      const { lat: latD, lng: lngD } = map.getCenter();\r\n      const { lat, lng } = map.getCenter();\r\n\r\n      const checkEqualArrays =\r\n        [lat, lng] !== [latD.toFixed(5) * 1, lngD.toFixed(5) * 1];\r\n\r\n      document.body.classList[checkEqualArrays ? \"add\" : \"remove\"](\r\n        \"show-button-home\"\r\n      );\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!map) return;\r\n\r\n    const customControler = L.Control.extend({\r\n      options: {\r\n        position: \"topleft\",\r\n      },\r\n\r\n      onAdd: function () {\r\n        const btn = L.DomUtil.create(\"button\", \"back-to-home\");\r\n        btn.title = \"pooooooooooooop rotation\";\r\n        btn.innerHTML =\r\n          '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\"><path d=\"M32 18.451L16 6.031 0 18.451v-5.064L16 .967l16 12.42zM28 18v12h-8v-8h-8v8H4V18l12-9z\"></path></svg>';\r\n\r\n        btn.onclick = function () {\r\n          map.flyToBounds([center]);\r\n          document.body.classList.remove(\"show-button-home\");\r\n        };\r\n\r\n        return btn;\r\n      },\r\n    });\r\n\r\n    map.addControl(new customControler());\r\n\r\n    const info = L.Control.extend({\r\n      options: {\r\n        position: \"bottomleft\",\r\n      },\r\n\r\n      onAdd: function () {\r\n        const info = L.DomUtil.create(\"div\", \"legend\");\r\n        info.textContent = \"move the map\";\r\n        return info;\r\n      },\r\n    });\r\n\r\n    map.addControl(new info());\r\n  }, [map]);\r\n\r\n  return null;\r\n};\r\n\r\nconst MapWrapper = () => {\r\n  const [map, setMap] = useState(null);\r\n\r\n  return (\r\n    <MapContainer\r\n      whenCreated={setMap}\r\n      center={center}\r\n      zoom={18}\r\n      scrollWheelZoom={false}\r\n    >\r\n      <TileLayer {...tileLayer} />\r\n\r\n      <HomeButton map={map} />\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default MapWrapper;\r\n","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layersContro;\n\n      (_context$layersContro = context.layersControl) == null ? void 0 : _context$layersContro.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","const tileLayer = {\r\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\r\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n}\r\n\r\nexport default tileLayer;","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer({\n  url,\n  ...options\n}, context) {\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);"],"sourceRoot":""}