{"version":3,"sources":["../node_modules/react-leaflet/esm/GeoJSON.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","util/tileLayer.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js"],"names":["GeoJSON","createPathComponent","ctx","data","options","instance","LeafletGeoJSON","context","overlayContainer","layer","props","prevProps","style","resetStyle","setStyle","withPane","pane","useEventHandlers","element","eventHandlers","eventHandlersRef","useRef","useEffect","on","current","off","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","useLayerLifecycle","layerContainer","map","addLayer","_context$layersContro","layersControl","removeLayer","createLayerHook","useElement","useLeafletContext","elementRef","useAttribution","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","createContainerComponent","ContainerComponent","ref","useImperativeHandle","children","React","createElement","LeafletProvider","forwardRef","createDivOverlayComponent","OverlayComponent","useState","isOpen","setOpen","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","pathOptions","createPathHook","createElementHook","updateElement","propsRef","createControlHook","positionRef","position","addTo","remove","setPosition","createDivOverlayHook","useLifecycle","tileLayer","url","createControlComponent","createInstance","useControl","createLayerComponent","useLayer","createOverlayComponent","useOverlay","usePath","createTileLayerComponent","updateGridLayer","opacity","zIndex","setOpacity","setZIndex","TileLayer","LeafletTileLayer"],"mappings":"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","file":"static/js/2.09de1b6e.chunk.js","sourcesContent":["import { createPathComponent } from '@react-leaflet/core';\nimport { GeoJSON as LeafletGeoJSON } from 'leaflet';\nexport const GeoJSON = createPathComponent(function createGeoJSON({\n  data,\n  ...options\n}, ctx) {\n  const instance = new LeafletGeoJSON(data, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateGeoJSON(layer, props, prevProps) {\n  if (props.style !== prevProps.style) {\n    if (props.style == null) {\n      layer.resetStyle();\n    } else {\n      layer.setStyle(props.style);\n    }\n  }\n});","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layersContro;\n\n      (_context$layersContro = context.layersControl) == null ? void 0 : _context$layersContro.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","const tileLayer = {\r\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\r\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n}\r\n\r\nexport default tileLayer;","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer({\n  url,\n  ...options\n}, context) {\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);"],"sourceRoot":""}