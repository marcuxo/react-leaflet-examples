{"version":3,"sources":["../node_modules/react-leaflet/esm/hooks.js","../node_modules/react-leaflet/esm/LayersControl.js","../node_modules/react-leaflet/esm/FeatureGroup.js","../node_modules/react-leaflet/esm/Polygon.js","pages/controlling-polygons.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","util/tileLayer.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js"],"names":["useMap","useLeafletContext","map","useMapEvent","type","handler","useEffect","on","off","useLayersControlElement","createElementHook","ctx","children","options","instance","Control","Layers","undefined","context","layersControl","control","props","prevProps","collapsed","collapse","expand","useLayersControl","createControlHook","LayersControl","createContainerComponent","createControlledLayer","addLayerToControl","parentContext","propsRef","useRef","useState","layer","setLayer","addLayer","useCallback","layerToAdd","current","checked","name","removeLayer","layerToRemove","useMemo","layerContainer","React","createElement","LeafletProvider","value","BaseLayer","addBaseLayer","Overlay","addOverlay","FeatureGroup","createPathComponent","LeafletFeatureGroup","overlayContainer","Polygon","positions","LeafletPolygon","setLatLngs","center","River","Place","ControllingGroup","layeradd","bounds","L","LatLngBounds","eachLayer","extend","getBounds","isValid","flyToBounds","riverColor","color","placeColor","MapWrapper","MapContainer","zoom","scrollWheelZoom","TileLayer","tileLayer","position","pathOptions","withPane","pane","useEventHandlers","element","eventHandlers","eventHandlersRef","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","useLayerLifecycle","_context$layersContro","createLayerHook","useElement","elementRef","useAttribution","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","ContainerComponent","ref","useImperativeHandle","forwardRef","createDivOverlayComponent","OverlayComponent","isOpen","setOpen","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","setStyle","createPathHook","updateElement","positionRef","addTo","remove","setPosition","createDivOverlayHook","useLifecycle","url","createControlComponent","createInstance","useControl","createLayerComponent","useLayer","createOverlayComponent","useOverlay","usePath","createTileLayerComponent","updateGridLayer","opacity","zIndex","setOpacity","setZIndex","LeafletTileLayer"],"mappings":"yIAAA,uFAEO,SAASA,IACd,OAAOC,cAAoBC,IAEtB,SAASC,EAAYC,EAAMC,GAChC,IAAMH,EAAMF,IASZ,OARAM,qBAAU,WAGR,OADAJ,EAAIK,GAAGH,EAAMC,GACN,WAELH,EAAIM,IAAIJ,EAAMC,MAEf,CAACH,EAAKE,EAAMC,IACRH,I,sJCZIO,EAA0BC,aAAkB,WAGtDC,GAAK,EAFNC,SAEM,IADHC,EACG,4BACAC,EAAW,IAAIC,UAAQC,YAAOC,OAAWA,EAAWJ,GAC1D,MAAO,CACLC,WACAI,QAAS,2BAAKP,GAAP,IACLQ,cAAeL,QAGlB,SAA6BM,EAASC,EAAOC,GAC1CD,EAAME,YAAcD,EAAUC,aACR,IAApBF,EAAME,UACRH,EAAQI,WAERJ,EAAQK,aAIDC,EAAmBC,YAAkBlB,GAErCmB,EAAgBC,YAAyBH,GAC/C,SAASI,EAAsBC,GACpC,OAAO,SAAyBV,GAC9B,IAAMW,EAAgB/B,cAChBgC,EAAWC,iBAAOb,GAFa,EAGXc,mBAAS,MAHE,mBAG9BC,EAH8B,KAGvBC,EAHuB,KAKnClB,EAEEa,EAFFb,cACAjB,EACE8B,EADF9B,IAEIoC,EAAWC,uBAAY,SAAAC,GACN,MAAjBrB,IACEc,EAASQ,QAAQC,SACnBxC,EAAIoC,SAASE,GAGfT,EAAkBZ,EAAeqB,EAAYP,EAASQ,QAAQE,MAC9DN,EAASG,MAEV,CAACrB,EAAejB,IACb0C,EAAcL,uBAAY,SAAAM,GACb,MAAjB1B,GAAiCA,EAAcyB,YAAYC,GAC3DR,EAAS,QACR,CAAClB,IACED,EAAU4B,mBAAQ,8BAAC,eAAWd,GAAZ,IACtBe,eAAgB,CACdT,WACAM,mBAEA,CAACZ,EAAeM,EAAUM,IAY9B,OAXAtC,qBAAU,WACM,OAAV8B,GAAkBH,EAASQ,UAAYpB,KACnB,IAAlBA,EAAMqB,SAAiD,MAA5BT,EAASQ,QAAQC,UAAgD,IAA7BT,EAASQ,QAAQC,SAE5C,IAA7BT,EAASQ,QAAQC,SAAsC,MAAjBrB,EAAMqB,UAAqC,IAAlBrB,EAAMqB,SAC9ExC,EAAI0C,YAAYR,GAFhBlC,EAAIoC,SAASF,GAKfH,EAASQ,QAAUpB,MAGhBA,EAAMT,SAAwBoC,IAAMC,cAAcC,IAAiB,CACxEC,MAAOjC,GACNG,EAAMT,UAAY,MAGzBgB,EAAcwB,UAAYtB,GAAsB,SAAsBX,EAAeiB,EAAOO,GAC1FxB,EAAckC,aAAajB,EAAOO,MAEpCf,EAAc0B,QAAUxB,GAAsB,SAAoBX,EAAeiB,EAAOO,GACtFxB,EAAcoC,WAAWnB,EAAOO,O,uGCzErBa,EAAeC,aAAoB,WAG7C9C,GAAK,EAFNC,SAEM,IADHC,EACG,4BACAC,EAAW,IAAI4C,eAAoB,GAAI7C,GAK7C,MAAO,CACLC,WACAI,QANc,2BAAKP,GAAR,IACXoC,eAAgBjC,EAChB6C,iBAAkB7C,S,gICPT8C,EAAUH,aAAoB,WAGxC9C,GAAK,IAFNkD,EAEM,EAFNA,UACGhD,EACG,6BACAC,EAAW,IAAIgD,UAAeD,EAAWhD,GAC/C,MAAO,CACLC,WACAI,QAAS,2BAAKP,GAAP,IACLgD,iBAAkB7C,QAGrB,SAAuBsB,EAAOf,EAAOC,GAClCD,EAAMwC,YAAcvC,EAAUuC,WAChCzB,EAAM2B,WAAW1C,EAAMwC,c,eCJrBG,EAAS,CAAC,SAAU,UAEpBC,EAAQ,CACZ,CAAC,mBAAoB,mBACrB,CAAC,mBAAoB,oBACrB,CAAC,iBAAkB,oBACnB,CAAC,kBAAmB,oBACpB,CAAC,mBAAoB,oBACrB,CAAC,mBAAoB,oBACrB,CAAC,kBAAmB,mBACpB,CAAC,iBAAkB,oBACnB,CAAC,kBAAmB,oBACpB,CAAC,kBAAmB,oBACpB,CAAC,kBAAmB,oBAGhBC,EAAQ,CACZ,CAAC,kBAAmB,oBACpB,CAAC,mBAAoB,mBACrB,CAAC,mBAAoB,mBACrB,CAAC,kBAAmB,qBAGhBC,EAAmB,WACvB,IAAMjE,EAAMC,YAAY,CACtBiE,SADsB,WAEpB,IAAIC,EAAS,IAAIC,IAAEC,aACnBrE,EAAIsE,WAAU,SAAUpC,GAClBA,aAAiBkC,IAAEd,cACrBa,EAAOI,OAAOrC,EAAMsC,gBAIpBL,EAAOM,WACTzE,EAAI0E,YAAY,CAACP,OAKvB,OAAO,MAGHQ,EAAa,CAAEC,MAAO,OACtBC,EAAa,CAAED,MAAO,QA0BbE,UAxBI,WACjB,OACE,eAACC,EAAA,EAAD,CAAcjB,OAAQA,EAAQkB,KAAM,GAAIC,iBAAiB,EAAzD,UACE,cAACC,EAAA,EAAD,eAAeC,MAEf,eAACzD,EAAA,EAAD,CAAe0D,SAAS,WAAW/D,WAAW,EAA9C,UACE,cAACK,EAAA,EAAc0B,QAAf,CAAuBX,KAAK,QAA5B,SACE,cAACa,EAAA,EAAD,UACE,cAACI,EAAD,CAAS2B,YAAaV,EAAYhB,UAAWI,QAIjD,cAACrC,EAAA,EAAc0B,QAAf,CAAuBX,KAAK,QAA5B,SACE,cAACa,EAAA,EAAD,UACE,cAACI,EAAD,CAAS2B,YAAaR,EAAYlB,UAAWK,WAKnD,cAAC,EAAD,S,8EC3EC,SAASsB,EAASnE,EAAOH,GAAS,MACjCuE,EAAI,UAAGpE,EAAMoE,YAAT,QAAiBvE,EAAQuE,KACnC,OAAOA,EAAO,2BAAKpE,GAAR,IACToE,SACEpE,I,gCCJN,6CACO,SAASqE,EAAiBC,EAASC,GACxC,IAAMC,EAAmB3D,mBACzB5B,qBAAU,WAMR,OALqB,MAAjBsF,GACFD,EAAQ7E,SAASP,GAAGqF,GAGtBC,EAAiBpD,QAAUmD,EACpB,WAC2B,MAA5BC,EAAiBpD,SACnBkD,EAAQ7E,SAASN,IAAIqF,EAAiBpD,SAGxCoD,EAAiBpD,QAAU,QAE5B,CAACkD,EAASC,M,gCChBA,SAASE,EAAgBC,EAAKC,EAAK7C,GAYhD,OAXI6C,KAAOD,EACTE,OAAOC,eAAeH,EAAKC,EAAK,CAC9B7C,MAAOA,EACPgD,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZN,EAAIC,GAAO7C,EAGN4C,ECVT,SAASO,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eAEtDM,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,EAGM,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNb,EAAQL,OAAOqB,IAAS,GAAMC,SAAQ,SAAUvB,GAC9C,EAAekB,EAAQlB,EAAKsB,EAAOtB,OAE5BC,OAAOuB,0BAChBvB,OAAOwB,iBAAiBP,EAAQjB,OAAOuB,0BAA0BF,IAEjEhB,EAAQL,OAAOqB,IAASC,SAAQ,SAAUvB,GACxCC,OAAOC,eAAegB,EAAQlB,EAAKC,OAAOa,yBAAyBQ,EAAQtB,OAKjF,OAAOkB,E,mECjCT,+GAKO,SAASQ,EAAkB/B,EAASzE,GACzCZ,qBAAU,WAAoB,MAG5B,OAFe,UAAGY,EAAQ6B,sBAAX,QAA6B7B,EAAQhB,KAC1CoC,SAASqD,EAAQ7E,UACpB,WACL,IAAI6G,EAE+C,OAAlDA,EAAwBzG,EAAQC,gBAAkCwG,EAAsB/E,YAAY+C,EAAQ7E,UAC7GI,EAAQhB,IAAI0C,YAAY+C,EAAQ7E,aAEjC,CAACI,EAASyE,IAER,SAASiC,EAAgBC,GAC9B,OAAO,SAAkBxG,GACvB,IAAMH,EAAUjB,cACV6H,EAAaD,EAAWrC,YAASnE,EAAOH,GAAUA,GAIxD,OAHA6G,YAAe7G,EAAQhB,IAAKmB,EAAM2G,aAClCtC,YAAiBoC,EAAWrF,QAASpB,EAAMuE,eAC3C8B,EAAkBI,EAAWrF,QAASvB,GAC/B4G,K,gCCxBX,6CACO,SAASC,EAAe7H,EAAK8H,GAClC,IAAMC,EAAiB/F,iBAAO8F,GAC9B1H,qBAAU,WACJ0H,IAAgBC,EAAexF,SAAqC,MAA1BvC,EAAIgI,qBAClB,MAA1BD,EAAexF,SACjBvC,EAAIgI,mBAAmBC,kBAAkBF,EAAexF,SAGvC,MAAfuF,GACF9H,EAAIgI,mBAAmBE,eAAeJ,IAI1CC,EAAexF,QAAUuF,IACxB,CAAC9H,EAAK8H,M,iLCZJ,SAASnG,EAAyBgG,GACvC,SAASQ,EAAmBhH,EAAOiH,GAAK,MAIlCT,EAAWxG,GAAOoB,QAFpB3B,EAFoC,EAEpCA,SACAI,EAHoC,EAGpCA,QAGF,OADAqH,8BAAoBD,GAAK,kBAAMxH,KACN,MAAlBO,EAAMT,SAAmB,KAAoBoC,IAAMC,cAAcC,IAAiB,CACvFC,MAAOjC,GACNG,EAAMT,UAGX,OAAoB4H,qBAAWH,GAE1B,SAASI,EAA0BZ,GACxC,SAASa,EAAiBrH,EAAOiH,GAAK,MACVnG,oBAAS,GADC,mBAC7BwG,EAD6B,KACrBC,EADqB,KAGlC9H,EACE+G,EAAWxG,EAAOuH,GAASnG,QAD7B3B,SAEFyH,8BAAoBD,GAAK,kBAAMxH,KAC/BR,qBAAU,WACJqI,GACF7H,EAAS+H,WAEV,CAAC/H,EAAU6H,EAAQtH,EAAMT,WAE5B,IAAMkI,EAAchI,EAASiI,aAC7B,OAAOD,EAA2BE,uBAAa3H,EAAMT,SAAUkI,GAAe,KAGhF,OAAoBN,qBAAWE,GAE1B,SAASO,EAAoBpB,GAClC,SAASqB,EAAc7H,EAAOiH,GAAK,IAE/BxH,EACE+G,EAAWxG,GAAOoB,QADpB3B,SAGF,OADAyH,8BAAoBD,GAAK,kBAAMxH,KACxB,KAGT,OAAoB0H,qBAAWU,K,gCC7CjC,+GAKO,SAASC,EAAexD,EAAStE,GACtC,IAAM+H,EAAalH,mBACnB5B,qBAAU,WACR,GAAIe,EAAMkE,cAAgB6D,EAAW3G,QAAS,OACtC5B,EAAO,UAAGQ,EAAMkE,mBAAT,QAAwB,GACrCI,EAAQ7E,SAASuI,SAASxI,GAC1BuI,EAAW3G,QAAU5B,KAEtB,CAAC8E,EAAStE,IAER,SAASiI,EAAezB,GAC7B,OAAO,SAAiBxG,GACtB,IAAMH,EAAUjB,cACV6H,EAAaD,EAAWrC,YAASnE,EAAOH,GAAUA,GAIxD,OAHAwE,YAAiBoC,EAAWrF,QAASpB,EAAMuE,eAC3C8B,YAAkBI,EAAWrF,QAASvB,GACtCiI,EAAerB,EAAWrF,QAASpB,GAC5ByG,K,gCCtBX,6CACO,SAASpH,EAAkBuC,EAAesG,GAC/C,OAAqB,MAAjBA,EACK,SAAoClI,EAAOH,GAChD,OAAOgB,iBAAOe,EAAc5B,EAAOH,KAIhC,SAAkCG,EAAOH,GAC9C,IAAM4G,EAAa5F,iBAAOe,EAAc5B,EAAOH,IACzCe,EAAWC,iBAAOb,GAEtBP,EACEgH,EAAWrF,QADb3B,SAQF,OANAR,qBAAU,WACJ2B,EAASQ,UAAYpB,IACvBkI,EAAczI,EAAUO,EAAOY,EAASQ,SACxCR,EAASQ,QAAUpB,KAEpB,CAACP,EAAUO,EAAOH,IACd4G,K,gCCpBX,qDAEO,SAASnG,EAAkBkG,GAChC,OAAO,SAA2BxG,GAChC,IAAMH,EAAUjB,cACV6H,EAAaD,EAAWxG,EAAOH,GAEnCJ,EACEgH,EAAWrF,QADb3B,SAEI0I,EAActH,iBAAOb,EAAMiE,UAE/BA,EACEjE,EADFiE,SAcF,OAZAhF,qBAAU,WAER,OADAQ,EAAS2I,MAAMvI,EAAQhB,KAChB,WACLY,EAAS4I,YAEV,CAACxI,EAAQhB,IAAKY,IACjBR,qBAAU,WACQ,MAAZgF,GAAoBA,IAAakE,EAAY/G,UAC/C3B,EAAS6I,YAAYrE,GACrBkE,EAAY/G,QAAU6C,KAEvB,CAACxE,EAAUwE,IACPwC,K,gCCzBX,sEAIO,SAAS8B,EAAqB/B,EAAYgC,GAC/C,OAAO,SAAuBxI,EAAOuH,GACnC,IAAM1H,EAAUjB,cACV6H,EAAaD,EAAWrC,YAASnE,EAAOH,GAAUA,GAIxD,OAHA6G,YAAe7G,EAAQhB,IAAKmB,EAAM2G,aAClCtC,YAAiBoC,EAAWrF,QAASpB,EAAMuE,eAC3CiE,EAAa/B,EAAWrF,QAASvB,EAASG,EAAOuH,GAC1Cd,K,gCCNIzC,IALG,CAChB2C,YAAa,2EACb8B,IAAK,uD,gCCFP,8NAMO,SAASC,EAAuBC,GAQrC,IAAMnC,EAAanH,aAPnB,SAAuBW,EAAOH,GAC5B,MAAO,CACLJ,SAAUkJ,EAAe3I,GACzBH,cAKE+I,EAAatI,YAAkBkG,GACrC,OAAOoB,YAAoBgB,GAEtB,SAASC,EAAqBjH,EAAesG,GAClD,IAAM1B,EAAanH,YAAkBuC,EAAesG,GAC9CY,EAAWvC,YAAgBC,GACjC,OAAOhG,YAAyBsI,GAE3B,SAASC,EAAuBnH,EAAe4G,GACpD,IAAMhC,EAAanH,YAAkBuC,GAC/BoH,EAAaT,YAAqB/B,EAAYgC,GACpD,OAAOpB,YAA0B4B,GAE5B,SAAS5G,EAAoBR,EAAesG,GACjD,IAAM1B,EAAanH,YAAkBuC,EAAesG,GAC9Ce,EAAUhB,YAAezB,GAC/B,OAAOhG,YAAyByI,GAE3B,SAASC,EAAyBtH,EAAesG,GACtD,IAAM1B,EAAanH,YAAkBuC,EAAesG,GAC9CY,EAAWvC,YAAgBC,GACjC,OAAOoB,YAAoBkB,K,gCCpCtB,SAASK,EAAgBpI,EAAOf,EAAOC,GAAW,IAErDmJ,EAEEpJ,EAFFoJ,QACAC,EACErJ,EADFqJ,OAGa,MAAXD,GAAmBA,IAAYnJ,EAAUmJ,SAC3CrI,EAAMuI,WAAWF,GAGL,MAAVC,GAAkBA,IAAWpJ,EAAUoJ,QACzCtI,EAAMwI,UAAUF,GAXpB,mC,8GCEatF,EAAYmF,aAAyB,WAG/CrJ,GAAS,IAFV4I,EAEU,EAFVA,IACGjJ,EACO,uBACV,MAAO,CACLC,SAAU,IAAI+J,YAAiBf,EAAKtE,YAAS3E,EAASK,IACtDA,aAEDsJ","file":"static/js/pages-controlling-polygons-js.3c15df13.chunk.js","sourcesContent":["import { useLeafletContext } from '@react-leaflet/core';\nimport { useEffect } from 'react';\nexport function useMap() {\n  return useLeafletContext().map;\n}\nexport function useMapEvent(type, handler) {\n  const map = useMap();\n  useEffect(function addMapEventHandler() {\n    // @ts-ignore event type\n    map.on(type, handler);\n    return function removeMapEventHandler() {\n      // @ts-ignore event type\n      map.off(type, handler);\n    };\n  }, [map, type, handler]);\n  return map;\n}\nexport function useMapEvents(handlers) {\n  const map = useMap();\n  useEffect(function addMapEventHandlers() {\n    map.on(handlers);\n    return function removeMapEventHandlers() {\n      map.off(handlers);\n    };\n  }, [map, handlers]);\n  return map;\n}","import { LeafletProvider, createContainerComponent, createControlHook, createElementHook, useLeafletContext } from '@react-leaflet/core';\nimport { Control } from 'leaflet';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nexport const useLayersControlElement = createElementHook(function createLayersControl({\n  children: _c,\n  ...options\n}, ctx) {\n  const instance = new Control.Layers(undefined, undefined, options);\n  return {\n    instance,\n    context: { ...ctx,\n      layersControl: instance\n    }\n  };\n}, function updateLayersControl(control, props, prevProps) {\n  if (props.collapsed !== prevProps.collapsed) {\n    if (props.collapsed === true) {\n      control.collapse();\n    } else {\n      control.expand();\n    }\n  }\n});\nexport const useLayersControl = createControlHook(useLayersControlElement);\n// @ts-ignore\nexport const LayersControl = createContainerComponent(useLayersControl);\nexport function createControlledLayer(addLayerToControl) {\n  return function ControlledLayer(props) {\n    const parentContext = useLeafletContext();\n    const propsRef = useRef(props);\n    const [layer, setLayer] = useState(null);\n    const {\n      layersControl,\n      map\n    } = parentContext;\n    const addLayer = useCallback(layerToAdd => {\n      if (layersControl != null) {\n        if (propsRef.current.checked) {\n          map.addLayer(layerToAdd);\n        }\n\n        addLayerToControl(layersControl, layerToAdd, propsRef.current.name);\n        setLayer(layerToAdd);\n      }\n    }, [layersControl, map]);\n    const removeLayer = useCallback(layerToRemove => {\n      layersControl == null ? void 0 : layersControl.removeLayer(layerToRemove);\n      setLayer(null);\n    }, [layersControl]);\n    const context = useMemo(() => ({ ...parentContext,\n      layerContainer: {\n        addLayer,\n        removeLayer\n      }\n    }), [parentContext, addLayer, removeLayer]);\n    useEffect(() => {\n      if (layer !== null && propsRef.current !== props) {\n        if (props.checked === true && (propsRef.current.checked == null || propsRef.current.checked === false)) {\n          map.addLayer(layer);\n        } else if (propsRef.current.checked === true && (props.checked == null || props.checked === false)) {\n          map.removeLayer(layer);\n        }\n\n        propsRef.current = props;\n      }\n    });\n    return props.children ? /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children) : null;\n  };\n}\nLayersControl.BaseLayer = createControlledLayer(function addBaseLayer(layersControl, layer, name) {\n  layersControl.addBaseLayer(layer, name);\n});\nLayersControl.Overlay = createControlledLayer(function addOverlay(layersControl, layer, name) {\n  layersControl.addOverlay(layer, name);\n});","import { createPathComponent } from '@react-leaflet/core';\nimport { FeatureGroup as LeafletFeatureGroup } from 'leaflet';\nexport const FeatureGroup = createPathComponent(function createFeatureGroup({\n  children: _c,\n  ...options\n}, ctx) {\n  const instance = new LeafletFeatureGroup([], options);\n  const context = { ...ctx,\n    layerContainer: instance,\n    overlayContainer: instance\n  };\n  return {\n    instance,\n    context\n  };\n});","import { createPathComponent } from '@react-leaflet/core';\nimport { Polygon as LeafletPolygon } from 'leaflet';\nexport const Polygon = createPathComponent(function createPolygon({\n  positions,\n  ...options\n}, ctx) {\n  const instance = new LeafletPolygon(positions, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updatePolygon(layer, props, prevProps) {\n  if (props.positions !== prevProps.positions) {\n    layer.setLatLngs(props.positions);\n  }\n});","import {\r\n  MapContainer,\r\n  Polygon,\r\n  FeatureGroup,\r\n  TileLayer,\r\n  LayersControl,\r\n  useMapEvent,\r\n} from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport tileLayer from \"../util/tileLayer\";\r\n\r\nconst center = [52.22977, 21.01178];\r\n\r\nconst River = [\r\n  [52.261433597272294, 21.01272583007813],\r\n  [52.259857564663236, 21.008262634277347],\r\n  [52.2485084763669, 21.019763946533207],\r\n  [52.24377883252849, 21.026287078857425],\r\n  [52.240835688576325, 21.032123565673828],\r\n  [52.235474460511696, 21.037960052490238],\r\n  [52.22800971166361, 21.04465484619141],\r\n  [52.2249603686772, 21.047916412353516],\r\n  [52.23600009974023, 21.042766571044925],\r\n  [52.24966453484508, 21.023368835449222],\r\n  [52.26132853017426, 21.01272583007813],\r\n];\r\n\r\nconst Place = [\r\n  [52.23295130556395, 20.998821258544925],\r\n  [52.230007443518716, 20.98474502563477],\r\n  [52.224750061441355, 20.98920822143555],\r\n  [52.22769427210073, 21.002597808837894],\r\n];\r\n\r\nconst ControllingGroup = () => {\r\n  const map = useMapEvent({\r\n    layeradd() {\r\n      let bounds = new L.LatLngBounds();\r\n      map.eachLayer(function (layer) {\r\n        if (layer instanceof L.FeatureGroup) {\r\n          bounds.extend(layer.getBounds());\r\n        }\r\n      });\r\n\r\n      if (bounds.isValid()) {\r\n        map.flyToBounds([bounds]);\r\n      }\r\n    },\r\n  });\r\n\r\n  return null;\r\n};\r\n\r\nconst riverColor = { color: \"red\" };\r\nconst placeColor = { color: \"blue\" };\r\n\r\nconst MapWrapper = () => {\r\n  return (\r\n    <MapContainer center={center} zoom={18} scrollWheelZoom={false}>\r\n      <TileLayer {...tileLayer} />\r\n\r\n      <LayersControl position=\"topright\" collapsed={false}>\r\n        <LayersControl.Overlay name=\"River\">\r\n          <FeatureGroup>\r\n            <Polygon pathOptions={riverColor} positions={River} />\r\n          </FeatureGroup>\r\n        </LayersControl.Overlay>\r\n\r\n        <LayersControl.Overlay name=\"Place\">\r\n          <FeatureGroup>\r\n            <Polygon pathOptions={placeColor} positions={Place} />\r\n          </FeatureGroup>\r\n        </LayersControl.Overlay>\r\n      </LayersControl>\r\n\r\n      <ControllingGroup />\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default MapWrapper;\r\n","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layersContro;\n\n      (_context$layersContro = context.layersControl) == null ? void 0 : _context$layersContro.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","const tileLayer = {\r\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\r\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n}\r\n\r\nexport default tileLayer;","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer({\n  url,\n  ...options\n}, context) {\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);"],"sourceRoot":""}