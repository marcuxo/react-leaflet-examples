{"version":3,"sources":["../node_modules/react-leaflet/esm/hooks.js","../node_modules/@react-leaflet/core/esm/media-overlay.js","../node_modules/react-leaflet/esm/ImageOverlay.js","pages/image-instead-of-map.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","../node_modules/@react-leaflet/core/esm/generic.js"],"names":["useMap","useLeafletContext","map","useMapEvent","type","handler","useEffect","on","off","updateMediaOverlay","overlay","props","prevProps","bounds","LatLngBounds","setBounds","opacity","setOpacity","zIndex","setZIndex","ImageOverlay","createLayerComponent","ctx","url","options","instance","LeafletImageOverlay","context","overlayContainer","setUrl","imageBounds","OverlayImage","fitBounds","transparent","MapWrapper","crs","CRS","Simple","maxZoom","minZoom","scrollWheelZoom","withPane","pane","useEventHandlers","element","eventHandlers","eventHandlersRef","useRef","current","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","useLayerLifecycle","layerContainer","addLayer","_context$layersContro","layersControl","removeLayer","createLayerHook","useElement","elementRef","useAttribution","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","createContainerComponent","ContainerComponent","ref","useImperativeHandle","children","React","createElement","LeafletProvider","forwardRef","createDivOverlayComponent","OverlayComponent","useState","isOpen","setOpen","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","pathOptions","setStyle","createPathHook","createElementHook","updateElement","propsRef","createControlHook","positionRef","position","addTo","remove","setPosition","createDivOverlayHook","useLifecycle","createControlComponent","createInstance","useControl","useLayer","createOverlayComponent","useOverlay","createPathComponent","usePath","createTileLayerComponent"],"mappings":"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","file":"static/js/pages-image-instead-of-map-js.043f3127.chunk.js","sourcesContent":["import { useLeafletContext } from '@react-leaflet/core';\nimport { useEffect } from 'react';\nexport function useMap() {\n  return useLeafletContext().map;\n}\nexport function useMapEvent(type, handler) {\n  const map = useMap();\n  useEffect(function addMapEventHandler() {\n    // @ts-ignore event type\n    map.on(type, handler);\n    return function removeMapEventHandler() {\n      // @ts-ignore event type\n      map.off(type, handler);\n    };\n  }, [map, type, handler]);\n  return map;\n}\nexport function useMapEvents(handlers) {\n  const map = useMap();\n  useEffect(function addMapEventHandlers() {\n    map.on(handlers);\n    return function removeMapEventHandlers() {\n      map.off(handlers);\n    };\n  }, [map, handlers]);\n  return map;\n}","import { LatLngBounds } from 'leaflet';\nexport function updateMediaOverlay(overlay, props, prevProps) {\n  if (props.bounds instanceof LatLngBounds && props.bounds !== prevProps.bounds) {\n    overlay.setBounds(props.bounds);\n  }\n\n  if (props.opacity != null && props.opacity !== prevProps.opacity) {\n    overlay.setOpacity(props.opacity);\n  }\n\n  if (props.zIndex != null && props.zIndex !== prevProps.zIndex) {\n    // @ts-ignore missing in definition but inherited from ImageOverlay\n    overlay.setZIndex(props.zIndex);\n  }\n}","import { createLayerComponent, updateMediaOverlay } from '@react-leaflet/core';\nimport { ImageOverlay as LeafletImageOverlay } from 'leaflet';\nexport const ImageOverlay = createLayerComponent(function createImageOveraly({\n  bounds,\n  url,\n  ...options\n}, ctx) {\n  const instance = new LeafletImageOverlay(url, bounds, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateImageOverlay(overlay, props, prevProps) {\n  updateMediaOverlay(overlay, props, prevProps);\n\n  if (props.url !== prevProps.url) {\n    overlay.setUrl(props.url);\n  }\n});","import { CRS } from 'leaflet';\r\nimport { MapContainer, ImageOverlay, useMap } from 'react-leaflet';\r\n\r\nlet imageBounds = [\r\n  [50, 50], // padding\r\n  [847, 1280], // image dimensions\r\n];\r\n\r\nconst OverlayImage = () => {\r\n  const map = useMap();\r\n\r\n  map.fitBounds(imageBounds);\r\n\r\n  return (\r\n    <ImageOverlay\r\n      bounds={imageBounds}\r\n      url={'https://tomik23.github.io/leaflet-examples/static/factory_UML.png'}\r\n      transparent={true}\r\n    />\r\n  );\r\n}\r\n\r\nconst MapWrapper = () => {\r\n  return (\r\n    <MapContainer\r\n      crs={CRS.Simple}\r\n      maxZoom={1}\r\n      minZoom={-4}\r\n      scrollWheelZoom={false}>\r\n\r\n      <OverlayImage />\r\n\r\n    </MapContainer>\r\n  )\r\n}\r\n\r\nexport default MapWrapper;","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layersContro;\n\n      (_context$layersContro = context.layersControl) == null ? void 0 : _context$layersContro.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}"],"sourceRoot":""}