{"version":3,"sources":["pages/tiles-gray.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","util/tileLayer.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js"],"names":["center","MapWrapper","useState","map","setMap","tileRef","useRef","useEffect","current","getContainer","style","setProperty","whenReady","zoom","scrollWheelZoom","ref","tileLayer","withPane","props","context","pane","useEventHandlers","element","eventHandlers","eventHandlersRef","instance","on","off","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","useLayerLifecycle","layerContainer","addLayer","_context$layersContro","layersControl","removeLayer","createLayerHook","useElement","useLeafletContext","elementRef","useAttribution","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","createContainerComponent","ContainerComponent","useImperativeHandle","children","React","createElement","LeafletProvider","forwardRef","createDivOverlayComponent","OverlayComponent","isOpen","setOpen","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","pathOptions","options","setStyle","createPathHook","createElementHook","updateElement","propsRef","createControlHook","positionRef","position","addTo","remove","setPosition","createDivOverlayHook","useLifecycle","url","createControlComponent","createInstance","useControl","createLayerComponent","useLayer","createOverlayComponent","useOverlay","createPathComponent","usePath","createTileLayerComponent","updateGridLayer","layer","prevProps","opacity","zIndex","setOpacity","setZIndex","TileLayer","LeafletTileLayer"],"mappings":"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","file":"static/js/pages-tiles-gray-js.a247ad39.chunk.js","sourcesContent":["import { useRef, useState, useEffect } from \"react\";\r\nimport { MapContainer, TileLayer } from \"react-leaflet\";\r\nimport tileLayer from \"../util/tileLayer\";\r\n\r\nconst center = [52.22977, 21.01178];\r\n\r\n// -------------------------------------------\r\n\r\n// The best way to add the following code to your style\r\n\r\n// .leaflet-tile-container {\r\n//   filter: grayscale(1)\r\n// }\r\n\r\n// Or -----------------------------------------\r\n\r\nconst MapWrapper = () => {\r\n  const [map, setMap] = useState(null);\r\n  const tileRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!map) return;\r\n    tileRef.current.getContainer().style.setProperty(\"filter\", `grayscale(1)`);\r\n  }, [map]);\r\n\r\n  return (\r\n    <MapContainer\r\n      whenReady={setMap}\r\n      center={center}\r\n      zoom={18}\r\n      scrollWheelZoom={false}\r\n    >\r\n      <TileLayer ref={tileRef} {...tileLayer} />\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default MapWrapper;\r\n","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layersContro;\n\n      (_context$layersContro = context.layersControl) == null ? void 0 : _context$layersContro.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","const tileLayer = {\r\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\r\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n}\r\n\r\nexport default tileLayer;","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer({\n  url,\n  ...options\n}, context) {\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);"],"sourceRoot":""}