{"version":3,"sources":["../node_modules/react-leaflet/esm/Polyline.js","pages/polyline.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","util/tileLayer.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js","../node_modules/react-leaflet/esm/Popup.js"],"names":["Polyline","createPathComponent","ctx","positions","options","instance","LeafletPolyline","context","overlayContainer","layer","props","prevProps","setLatLngs","center","points","MapWrapper","zoom","scrollWheelZoom","tileLayer","color","opacity","weight","withPane","pane","useEventHandlers","element","eventHandlers","eventHandlersRef","useRef","useEffect","on","current","off","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","useLayerLifecycle","layerContainer","map","addLayer","_context$layersContro","layersControl","removeLayer","createLayerHook","useElement","useLeafletContext","elementRef","useAttribution","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","createContainerComponent","ContainerComponent","ref","useImperativeHandle","children","React","createElement","LeafletProvider","forwardRef","createDivOverlayComponent","OverlayComponent","useState","isOpen","setOpen","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","pathOptions","setStyle","createPathHook","createElementHook","updateElement","propsRef","createControlHook","positionRef","position","addTo","remove","setPosition","createDivOverlayHook","useLifecycle","url","createControlComponent","createInstance","useControl","createLayerComponent","useLayer","createOverlayComponent","useOverlay","usePath","createTileLayerComponent","updateGridLayer","zIndex","setOpacity","setZIndex","TileLayer","LeafletTileLayer","Popup","LeafletPopup","onClose","onOpen","onPopupOpen","event","popup","onPopupClose","popupopen","popupclose","setLatLng","openOn","bindPopup"],"mappings":"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","file":"static/js/pages-polyline-js.9ac880e9.chunk.js","sourcesContent":["import { createPathComponent } from '@react-leaflet/core';\nimport { Polyline as LeafletPolyline } from 'leaflet';\nexport const Polyline = createPathComponent(function createPolyline({\n  positions,\n  ...options\n}, ctx) {\n  const instance = new LeafletPolyline(positions, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updatePolyline(layer, props, prevProps) {\n  if (props.positions !== prevProps.positions) {\n    layer.setLatLngs(props.positions);\n  }\n});","import { MapContainer, TileLayer, Popup, Polyline } from 'react-leaflet';\r\nimport tileLayer from '../util/tileLayer';\r\n\r\nconst center = [52.2302, 21.01258];\r\n\r\nconst points = [\r\n  [52.2308124251888, 21.011003851890568],\r\n  [52.2302604393307, 21.01121842861176],\r\n  [52.2297445891999, 21.011282801628116],\r\n  [52.22953759032849, 21.011492013931278],\r\n  [52.22954416173605, 21.01194798946381],\r\n  [52.22967558968336, 21.012285947799686],\r\n  [52.2300008721797, 21.012935042381287],\r\n  [52.230306438414374, 21.014378070831302],\r\n];\r\n\r\nconst MapWrapper = () => {\r\n  return (\r\n    <MapContainer center={center} zoom={18} scrollWheelZoom={false}>\r\n\r\n      <TileLayer {...tileLayer} />\r\n\r\n      <Polyline\r\n        color={'red'}\r\n        opacity={0.7}\r\n        weight={20}\r\n        positions={points}\r\n      >\r\n\r\n        <Popup>Polygon</Popup>\r\n      </Polyline>\r\n\r\n    </MapContainer>\r\n  )\r\n}\r\n\r\nexport default MapWrapper;","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layersContro;\n\n      (_context$layersContro = context.layersControl) == null ? void 0 : _context$layersContro.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","const tileLayer = {\r\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\r\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n}\r\n\r\nexport default tileLayer;","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer({\n  url,\n  ...options\n}, context) {\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);","import { createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n  return {\n    instance: new LeafletPopup(props, context.overlayContainer),\n    context\n  };\n}, function usePopupLifecycle(element, context, props, setOpen) {\n  const {\n    onClose,\n    onOpen,\n    position\n  } = props;\n  useEffect(function addPopup() {\n    const {\n      instance\n    } = element;\n\n    function onPopupOpen(event) {\n      if (event.popup === instance) {\n        instance.update();\n        setOpen(true);\n        onOpen == null ? void 0 : onOpen();\n      }\n    }\n\n    function onPopupClose(event) {\n      if (event.popup === instance) {\n        setOpen(false);\n        onClose == null ? void 0 : onClose();\n      }\n    }\n\n    context.map.on({\n      popupopen: onPopupOpen,\n      popupclose: onPopupClose\n    });\n\n    if (context.overlayContainer == null) {\n      // Attach to a Map\n      if (position != null) {\n        instance.setLatLng(position);\n      }\n\n      instance.openOn(context.map);\n    } else {\n      // Attach to container component\n      context.overlayContainer.bindPopup(instance);\n    }\n\n    return function removePopup() {\n      context.map.off({\n        popupopen: onPopupOpen,\n        popupclose: onPopupClose\n      });\n      context.map.removeLayer(instance);\n    };\n  }, [element, context, setOpen, onClose, onOpen, position]);\n});"],"sourceRoot":""}