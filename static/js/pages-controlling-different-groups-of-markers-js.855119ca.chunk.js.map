{"version":3,"sources":["../node_modules/react-leaflet/esm/Marker.js","../node_modules/react-leaflet/esm/hooks.js","../node_modules/react-leaflet/esm/LayersControl.js","../node_modules/react-leaflet/esm/FeatureGroup.js","pages/controlling-different-groups-of-markers.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js","../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","util/tileLayer.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js","../node_modules/react-leaflet/esm/Popup.js"],"names":["Marker","createLayerComponent","ctx","position","options","instance","LeafletMarker","context","overlayContainer","marker","props","prevProps","setLatLng","icon","setIcon","zIndexOffset","setZIndexOffset","opacity","setOpacity","dragging","draggable","enable","disable","useMap","useLeafletContext","map","useMapEvent","type","handler","useEffect","on","off","useLayersControlElement","createElementHook","children","Control","Layers","undefined","layersControl","control","collapsed","collapse","expand","useLayersControl","createControlHook","LayersControl","createContainerComponent","createControlledLayer","addLayerToControl","parentContext","propsRef","useRef","useState","layer","setLayer","addLayer","useCallback","layerToAdd","current","checked","name","removeLayer","layerToRemove","useMemo","layerContainer","React","createElement","LeafletProvider","value","BaseLayer","addBaseLayer","Overlay","addOverlay","FeatureGroup","createPathComponent","LeafletFeatureGroup","pointsA","lat","lng","title","pointsB","center","ControllingGroup","overlayadd","e","bounds","L","LatLngBounds","eachLayer","extend","getBounds","isValid","flyToBounds","MapWrapper","zoom","scrollWheelZoom","tileLayer","index","withPane","pane","useEventHandlers","element","eventHandlers","eventHandlersRef","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","useLayerLifecycle","_context$layersContro","createLayerHook","useElement","elementRef","useAttribution","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","ContainerComponent","ref","useImperativeHandle","forwardRef","createDivOverlayComponent","OverlayComponent","isOpen","setOpen","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","usePathOptions","optionsRef","pathOptions","setStyle","createPathHook","updateElement","positionRef","addTo","remove","setPosition","createDivOverlayHook","useLifecycle","url","createControlComponent","createInstance","useControl","useLayer","createOverlayComponent","useOverlay","usePath","createTileLayerComponent","updateGridLayer","zIndex","setZIndex","TileLayer","LeafletTileLayer","Popup","LeafletPopup","onClose","onOpen","onPopupOpen","event","popup","onPopupClose","popupopen","popupclose","openOn","bindPopup"],"mappings":"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","file":"static/js/pages-controlling-different-groups-of-markers-js.855119ca.chunk.js","sourcesContent":["import { createLayerComponent } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker({\n  position,\n  ...options\n}, ctx) {\n  const instance = new LeafletMarker(position, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateMarker(marker, props, prevProps) {\n  if (props.position !== prevProps.position) {\n    marker.setLatLng(props.position);\n  }\n\n  if (props.icon != null && props.icon !== prevProps.icon) {\n    marker.setIcon(props.icon);\n  }\n\n  if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n    marker.setZIndexOffset(props.zIndexOffset);\n  }\n\n  if (props.opacity != null && props.opacity !== prevProps.opacity) {\n    marker.setOpacity(props.opacity);\n  }\n\n  if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n    if (props.draggable === true) {\n      marker.dragging.enable();\n    } else {\n      marker.dragging.disable();\n    }\n  }\n});","import { useLeafletContext } from '@react-leaflet/core';\nimport { useEffect } from 'react';\nexport function useMap() {\n  return useLeafletContext().map;\n}\nexport function useMapEvent(type, handler) {\n  const map = useMap();\n  useEffect(function addMapEventHandler() {\n    // @ts-ignore event type\n    map.on(type, handler);\n    return function removeMapEventHandler() {\n      // @ts-ignore event type\n      map.off(type, handler);\n    };\n  }, [map, type, handler]);\n  return map;\n}\nexport function useMapEvents(handlers) {\n  const map = useMap();\n  useEffect(function addMapEventHandlers() {\n    map.on(handlers);\n    return function removeMapEventHandlers() {\n      map.off(handlers);\n    };\n  }, [map, handlers]);\n  return map;\n}","import { LeafletProvider, createContainerComponent, createControlHook, createElementHook, useLeafletContext } from '@react-leaflet/core';\nimport { Control } from 'leaflet';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nexport const useLayersControlElement = createElementHook(function createLayersControl({\n  children: _c,\n  ...options\n}, ctx) {\n  const instance = new Control.Layers(undefined, undefined, options);\n  return {\n    instance,\n    context: { ...ctx,\n      layersControl: instance\n    }\n  };\n}, function updateLayersControl(control, props, prevProps) {\n  if (props.collapsed !== prevProps.collapsed) {\n    if (props.collapsed === true) {\n      control.collapse();\n    } else {\n      control.expand();\n    }\n  }\n});\nexport const useLayersControl = createControlHook(useLayersControlElement);\n// @ts-ignore\nexport const LayersControl = createContainerComponent(useLayersControl);\nexport function createControlledLayer(addLayerToControl) {\n  return function ControlledLayer(props) {\n    const parentContext = useLeafletContext();\n    const propsRef = useRef(props);\n    const [layer, setLayer] = useState(null);\n    const {\n      layersControl,\n      map\n    } = parentContext;\n    const addLayer = useCallback(layerToAdd => {\n      if (layersControl != null) {\n        if (propsRef.current.checked) {\n          map.addLayer(layerToAdd);\n        }\n\n        addLayerToControl(layersControl, layerToAdd, propsRef.current.name);\n        setLayer(layerToAdd);\n      }\n    }, [layersControl, map]);\n    const removeLayer = useCallback(layerToRemove => {\n      layersControl == null ? void 0 : layersControl.removeLayer(layerToRemove);\n      setLayer(null);\n    }, [layersControl]);\n    const context = useMemo(() => ({ ...parentContext,\n      layerContainer: {\n        addLayer,\n        removeLayer\n      }\n    }), [parentContext, addLayer, removeLayer]);\n    useEffect(() => {\n      if (layer !== null && propsRef.current !== props) {\n        if (props.checked === true && (propsRef.current.checked == null || propsRef.current.checked === false)) {\n          map.addLayer(layer);\n        } else if (propsRef.current.checked === true && (props.checked == null || props.checked === false)) {\n          map.removeLayer(layer);\n        }\n\n        propsRef.current = props;\n      }\n    });\n    return props.children ? /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children) : null;\n  };\n}\nLayersControl.BaseLayer = createControlledLayer(function addBaseLayer(layersControl, layer, name) {\n  layersControl.addBaseLayer(layer, name);\n});\nLayersControl.Overlay = createControlledLayer(function addOverlay(layersControl, layer, name) {\n  layersControl.addOverlay(layer, name);\n});","import { createPathComponent } from '@react-leaflet/core';\nimport { FeatureGroup as LeafletFeatureGroup } from 'leaflet';\nexport const FeatureGroup = createPathComponent(function createFeatureGroup({\n  children: _c,\n  ...options\n}, ctx) {\n  const instance = new LeafletFeatureGroup([], options);\n  const context = { ...ctx,\n    layerContainer: instance,\n    overlayContainer: instance\n  };\n  return {\n    instance,\n    context\n  };\n});","import {\r\n  MapContainer,\r\n  Popup,\r\n  FeatureGroup,\r\n  TileLayer,\r\n  Marker,\r\n  LayersControl,\r\n  useMapEvent,\r\n} from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport tileLayer from \"../util/tileLayer\";\r\n\r\nconst pointsA = [\r\n  { lat: 52.230020586193795, lng: 21.01083755493164, title: \"point A1\" },\r\n  { lat: 52.22924516170657, lng: 21.011320352554325, title: \"point A2\" },\r\n  { lat: 52.229511304688444, lng: 21.01270973682404, title: \"point A3\" },\r\n  { lat: 52.23040500771883, lng: 21.012146472930908, title: \"point A4\" },\r\n];\r\n\r\nconst pointsB = [\r\n  { lat: 52.229314161892106, lng: 21.012055277824405, title: \"point B1\" },\r\n  { lat: 52.22950144756943, lng: 21.01193726062775, title: \"point B2\" },\r\n  { lat: 52.22966573260081, lng: 21.011829972267154, title: \"point B3\" },\r\n  { lat: 52.2298333027065, lng: 21.011744141578678, title: \"point B4\" },\r\n  { lat: 52.2299680154701, lng: 21.01164758205414, title: \"point B5\" },\r\n  { lat: 52.23012572745442, lng: 21.011583209037784, title: \"point B6\" },\r\n  { lat: 52.230276867580336, lng: 21.01143836975098, title: \"point B7\" },\r\n  { lat: 52.23046414919644, lng: 21.011341810226444, title: \"point B8\" },\r\n];\r\n\r\nconst center = [52.22977, 21.01178];\r\n\r\nconst ControllingGroup = () => {\r\n  const map = useMapEvent({\r\n    overlayadd(e) {\r\n      let bounds = new L.LatLngBounds();\r\n\r\n      map.eachLayer(function (layer) {\r\n        if (layer instanceof L.FeatureGroup) {\r\n          bounds.extend(layer.getBounds());\r\n        }\r\n      });\r\n\r\n      if (bounds.isValid()) {\r\n        map.flyToBounds(bounds);\r\n      }\r\n    },\r\n  });\r\n\r\n  return null;\r\n};\r\n\r\nconst MapWrapper = () => {\r\n  return (\r\n    <MapContainer center={center} zoom={18} scrollWheelZoom={false}>\r\n      <LayersControl position=\"topright\" collapsed={false}>\r\n        <TileLayer {...tileLayer} />\r\n\r\n        <LayersControl.Overlay name=\"point A\">\r\n          <FeatureGroup>\r\n            {pointsA.map(({ lat, lng, title }, index) => (\r\n              <Marker key={index} position={[lat, lng]}>\r\n                <Popup>{title}</Popup>\r\n              </Marker>\r\n            ))}\r\n          </FeatureGroup>\r\n        </LayersControl.Overlay>\r\n        <LayersControl.Overlay name=\"point B\">\r\n          <FeatureGroup>\r\n            {pointsB.map(({ lat, lng, title }, index) => (\r\n              <Marker key={index} position={[lat, lng]}>\r\n                <Popup>{title}</Popup>\r\n              </Marker>\r\n            ))}\r\n          </FeatureGroup>\r\n        </LayersControl.Overlay>\r\n      </LayersControl>\r\n\r\n      <ControllingGroup />\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default MapWrapper;\r\n","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layersContro;\n\n      (_context$layersContro = context.layersControl) == null ? void 0 : _context$layersContro.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","const tileLayer = {\r\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\r\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n}\r\n\r\nexport default tileLayer;","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer({\n  url,\n  ...options\n}, context) {\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);","import { createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n  return {\n    instance: new LeafletPopup(props, context.overlayContainer),\n    context\n  };\n}, function usePopupLifecycle(element, context, props, setOpen) {\n  const {\n    onClose,\n    onOpen,\n    position\n  } = props;\n  useEffect(function addPopup() {\n    const {\n      instance\n    } = element;\n\n    function onPopupOpen(event) {\n      if (event.popup === instance) {\n        instance.update();\n        setOpen(true);\n        onOpen == null ? void 0 : onOpen();\n      }\n    }\n\n    function onPopupClose(event) {\n      if (event.popup === instance) {\n        setOpen(false);\n        onClose == null ? void 0 : onClose();\n      }\n    }\n\n    context.map.on({\n      popupopen: onPopupOpen,\n      popupclose: onPopupClose\n    });\n\n    if (context.overlayContainer == null) {\n      // Attach to a Map\n      if (position != null) {\n        instance.setLatLng(position);\n      }\n\n      instance.openOn(context.map);\n    } else {\n      // Attach to container component\n      context.overlayContainer.bindPopup(instance);\n    }\n\n    return function removePopup() {\n      context.map.off({\n        popupopen: onPopupOpen,\n        popupclose: onPopupClose\n      });\n      context.map.removeLayer(instance);\n    };\n  }, [element, context, setOpen, onClose, onOpen, position]);\n});"],"sourceRoot":""}